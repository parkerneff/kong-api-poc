openapi: 3.0.2
info:
  title: RevolutionParts Catalog API
  version: '2'
  x-logo:
    url: >-
      https://s3.amazonaws.com/static.revolutionparts.com/assets/logos/rp-logo-stroke.png
servers:
  - url: /v2
paths:
  /catalog/user/onboard:
    post:
      tags:
        - User
      summary: Onboard New User
      operationId: onboard_new_user
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardInSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardInSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/user:
    get:
      tags:
        - User
      summary: List Users
      operationId: list_users
      parameters:
        - description: 'Valid filters: createdDate'
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: createdDate'
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog User Get
                type: array
                items:
                  $ref: '#/components/schemas/CatalogUserOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - User
      summary: Create User
      operationId: create_user
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogUserInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/user/{id}':
    get:
      tags:
        - User
      summary: Get User
      operationId: get_user
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogUserOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - User
      summary: Update User
      operationId: update_user
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogUserInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - User
      summary: Delete User
      operationId: delete_user
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/catalog:
    get:
      tags:
        - Catalog
      summary: List Catalogs
      operationId: list_catalogs
      parameters:
        - description: 'Valid filters: '
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: '
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Catalog Get
                type: array
                items:
                  $ref: '#/components/schemas/CatalogOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Catalog
      summary: Create Catalog
      operationId: create_catalog
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/catalog/{id}':
    get:
      tags:
        - Catalog
      summary: Get Catalog
      operationId: get_catalog
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Catalog
      summary: Update Catalog
      operationId: update_catalog
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Catalog
      summary: Delete Catalog
      operationId: delete_catalog
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/catalog/{id}/products':
    get:
      tags:
        - Catalog
      summary: List Product Associations
      operationId: list_product_associations
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - description: 'Valid filters: '
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: '
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Catalog  Id  Products Get
                type: array
                items:
                  $ref: '#/components/schemas/ProductAssociationOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/catalog/{id}/products/{productId}':
    get:
      tags:
        - Catalog
      summary: Get Product Association
      operationId: get_product_association
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAssociationOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Catalog
      summary: Create Product Association
      operationId: create_product_association
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Productid
            type: string
          name: productId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Catalog
      summary: Delete Product Association
      operationId: delete_product_association
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/category:
    get:
      tags:
        - Category
      summary: List Categories
      operationId: list_categories
      parameters:
        - required: false
          schema:
            title: Sort By
            type: string
          name: sort_by
          in: query
        - description: >-
            Valid filters: id, categoryListId, parentCategoryId, name,
            lookupKey, isExcluded, level
          required: false
          schema:
            title: Filters
            type: string
            description: >-
              Valid filters: id, categoryListId, parentCategoryId, name,
              lookupKey, isExcluded, level
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryItemsSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Category
      summary: Create Category
      operationId: create_category
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/category/{categoryId}':
    get:
      tags:
        - Category
      summary: Get Category
      operationId: get_category
      parameters:
        - required: true
          schema:
            title: Categoryid
            type: integer
          name: categoryId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Category
      summary: Update Category
      operationId: update_category
      parameters:
        - required: true
          schema:
            title: Categoryid
            type: string
          name: categoryId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Category
      summary: Delete Category
      operationId: delete_category
      parameters:
        - required: true
          schema:
            title: Categoryid
            type: integer
          name: categoryId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/category-list:
    get:
      tags:
        - Category List
      summary: List Category Lists
      operationId: list_category_lists
      parameters:
        - description: 'Valid filters: '
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: '
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListItemsSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Category List
      summary: Create Category List
      operationId: create_category_list
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryListInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/category-list/{categoryListId}':
    get:
      tags:
        - Category List
      summary: Get Category List
      operationId: get_category_list
      parameters:
        - required: true
          schema:
            title: Categorylistid
            type: integer
          name: categoryListId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Category List
      summary: Update Category List
      operationId: update_category_list
      parameters:
        - required: true
          schema:
            title: Categorylistid
            type: string
          name: categoryListId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryListInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Category List
      summary: Delete Category List
      operationId: delete_category_list
      parameters:
        - required: true
          schema:
            title: Categorylistid
            type: string
          name: categoryListId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/brand:
    get:
      tags:
        - Brand
      summary: List Brands
      operationId: list_brands
      parameters:
        - description: 'Valid filters: name, brandOwnerId, createdDate, acesBrandId'
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: name, brandOwnerId, createdDate, acesBrandId'
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Brand Get
                type: array
                items:
                  $ref: '#/components/schemas/BrandOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Brand
      summary: Create Brand
      operationId: create_brand
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/brand/{id}':
    get:
      tags:
        - Brand
      summary: Get Brand
      operationId: get_brand
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Brand
      summary: Update Brand
      operationId: update_brand
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Brand
      summary: Delete Brand
      operationId: delete_brand
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/brand-owner:
    get:
      tags:
        - Brand Owner
      summary: List Brand Owners
      operationId: list_brand_owners
      parameters:
        - description: 'Valid filters: createdDate'
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: createdDate'
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Brand Owner Get
                type: array
                items:
                  $ref: '#/components/schemas/BrandOwnerOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Brand Owner
      summary: Create Brand Owner
      operationId: create_brand_owner
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandOwnerInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/brand-owner/{id}':
    get:
      tags:
        - Brand Owner
      summary: Get Brand Owner
      operationId: get_brand_owner
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandOwnerOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Brand Owner
      summary: Update Brand Owner
      operationId: update_brand_owner
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandOwnerInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Brand Owner
      summary: Delete Brand Owner
      operationId: delete_brand_owner
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/product/bulk/create:
    post:
      tags:
        - Product
      summary: Create Products
      operationId: create_products
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductsInSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkProductsResultsOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/product/bulk/update:
    post:
      tags:
        - Product
      summary: Update Products
      operationId: update_products
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductsInSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkProductsResultsOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/product/bulk/delete:
    post:
      tags:
        - Product
      summary: Delete Products
      operationId: delete_products
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProductsInSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkProductsResultsOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/product/search:
    post:
      tags:
        - Product
      summary: Search Products
      operationId: product_search
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSearchInSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSearchOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/product:
    get:
      tags:
        - Product
      summary: List Products
      operationId: list_products
      parameters:
        - description: >-
            Valid filters: brand, catalog, createdTs, id, mpnStripped,
            skuStripped, type, updatedTs
          required: false
          schema:
            title: Filters
            type: string
            description: >-
              Valid filters: brand, catalog, createdTs, id, mpnStripped,
              skuStripped, type, updatedTs
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductItemsSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Product
      summary: Create Product
      operationId: create_product
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Product Schema
              anyOf:
                - $ref: '#/components/schemas/ProductInSchema'
                - $ref: '#/components/schemas/ProductBundleInSchema'
                - $ref: '#/components/schemas/ProductMasterVariantInSchema'
                - $ref: '#/components/schemas/ProductVariantInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/product/{productId}':
    get:
      tags:
        - Product
      summary: Get Product
      operationId: get_product
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Catalog Product  Productid  Get
                anyOf:
                  - $ref: '#/components/schemas/ProductOutSchema'
                  - $ref: '#/components/schemas/ProductBundleOutSchema'
                  - $ref: '#/components/schemas/ProductMasterVariantOutSchema'
                  - $ref: '#/components/schemas/ProductVariantOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Product
      summary: Update Product
      operationId: update_product
      parameters:
        - required: true
          schema:
            title: Productid
            type: string
          name: productId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Product Schema
              anyOf:
                - $ref: '#/components/schemas/ProductInSchema'
                - $ref: '#/components/schemas/ProductBundleInSchema'
                - $ref: '#/components/schemas/ProductMasterVariantInSchema'
                - $ref: '#/components/schemas/ProductVariantInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Product
      summary: Delete Product
      operationId: delete_product
      parameters:
        - required: true
          schema:
            title: Productid
            type: string
          name: productId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/product/{productId}/attributes':
    get:
      tags:
        - Product
      summary: List Product Attributes
      operationId: list_product_attributes
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - description: 'Valid filters: '
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: '
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Product  Productid  Attributes Get
                type: array
                items:
                  $ref: '#/components/schemas/AttributeOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Product
      summary: Create Product Attribute
      operationId: create_product_attribute
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/product/{productId}/attributes/{id}':
    get:
      tags:
        - Product
      summary: Get Product Attribute
      operationId: get_product_attribute
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Product
      summary: Update Product Attribute
      operationId: update_product_attribute
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Product
      summary: Delete Product Attribute
      operationId: delete_product_attribute
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/product/applications/bulk/create:
    post:
      tags:
        - Product
      summary: Create Products Applications
      operationId: create_products_applications
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductsApplicationsInSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkProductsApplicationsResultsOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/product/{productId}/applications':
    get:
      tags:
        - Product
      summary: List Product Applications
      operationId: list_product_applications
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - description: 'Valid filters: '
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: '
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Product  Productid  Applications Get
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Product
      summary: Create Product Application
      operationId: create_product_application
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/product/{productId}/applications/{id}':
    get:
      tags:
        - Product
      summary: Get Product Application
      operationId: get_product_application
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Product
      summary: Update Product Application
      operationId: update_product_application
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Product
      summary: Delete Product Application
      operationId: delete_product_application
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/product/{productId}/options':
    get:
      tags:
        - Product
      summary: List Product Options
      operationId: list_product_options
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - description: 'Valid filters: '
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: '
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Product  Productid  Options Get
                type: array
                items:
                  $ref: '#/components/schemas/OptionAttributeOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Product
      summary: Create Product Option
      operationId: create_product_option
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptionAttributeInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/product/{productId}/options/{id}':
    get:
      tags:
        - Product
      summary: Get Product Option
      operationId: get_product_option
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionAttributeOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Product
      summary: Update Product Option
      operationId: update_product_option
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptionAttributeInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Product
      summary: Delete Product Option
      operationId: delete_product_option
      parameters:
        - required: true
          schema:
            title: Productid
            type: integer
          name: productId
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/product-category:
    get:
      tags:
        - Product Category Association
      summary: List Product Category Associations
      operationId: list_product_category_associations
      parameters:
        - required: false
          schema:
            title: Sort By
            type: string
          name: sort_by
          in: query
        - description: 'Valid filters: id, productId, categoryId'
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: id, productId, categoryId'
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryAssociationItemsSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Product Category Association
      summary: Create Product Category Association
      operationId: create_product_category_association
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryAssociationInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/product-category/{productCategoryAssociationId}':
    get:
      tags:
        - Product Category Association
      summary: Get Product Category Association
      operationId: get_product_category_association
      parameters:
        - required: true
          schema:
            title: Productcategoryassociationid
            type: integer
          name: productCategoryAssociationId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryAssociationOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Product Category Association
      summary: Update Product Category Association
      operationId: update_product_category_association
      parameters:
        - required: true
          schema:
            title: Productcategoryassociationid
            type: string
          name: productCategoryAssociationId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryAssociationInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Product Category Association
      summary: Delete Product Category Association
      operationId: delete_product_category_association
      parameters:
        - required: true
          schema:
            title: Productcategoryassociationid
            type: integer
          name: productCategoryAssociationId
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/media:
    get:
      tags:
        - Media
      summary: List Media
      operationId: list_media
      parameters:
        - description: 'Valid filters: catalog, mediaListName, mpnStripped, productId'
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: catalog, mediaListName, mpnStripped, productId'
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageMediaItemsSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Media
      summary: Create Media
      operationId: create_media
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageMediaInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/media/{id}':
    get:
      tags:
        - Media
      summary: Get Media
      operationId: get_media
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageMediaOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Media
      summary: Update Media
      operationId: update_media
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageMediaInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Media
      summary: Delete Media
      operationId: delete_media
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/media-list:
    get:
      tags:
        - Media List
      summary: List Media Lists
      operationId: list_media_lists
      parameters:
        - description: 'Valid filters: name'
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: name'
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Media List Get
                type: array
                items:
                  $ref: '#/components/schemas/MediaListOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Media List
      summary: Create Media List
      operationId: create_media_list
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaListInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/media-list/{id}':
    get:
      tags:
        - Media List
      summary: Get Media List
      operationId: get_media_list
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaListOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Media List
      summary: Update Media List
      operationId: update_media_list
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaListInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Media List
      summary: Delete Media List
      operationId: delete_media_list
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/price/bulk/create:
    post:
      tags:
        - Price
      summary: Create Prices
      operationId: create_prices
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePricesInSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkPricesResultsOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/price/bulk/update:
    post:
      tags:
        - Price
      summary: Update Prices
      operationId: update_prices
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePricesInSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkPricesResultsOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/price:
    get:
      tags:
        - Price
      summary: List Prices
      operationId: list_prices
      parameters:
        - description: 'Valid filters: '
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: '
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Price Get
                type: array
                items:
                  $ref: '#/components/schemas/PriceOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Price
      summary: Create Price
      operationId: create_price
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/price/{id}':
    get:
      tags:
        - Price
      summary: Get Price
      operationId: get_price
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Price
      summary: Update Price
      operationId: update_price
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Price
      summary: Delete Price
      operationId: delete_price
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/price-list:
    get:
      tags:
        - Price List
      summary: List Price Lists
      operationId: list_price_lists
      parameters:
        - description: 'Valid filters: '
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: '
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Price List Get
                type: array
                items:
                  $ref: '#/components/schemas/PriceListOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    post:
      tags:
        - Price List
      summary: Create Price List
      operationId: create_price_list
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceListInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/price-list/{id}':
    get:
      tags:
        - Price List
      summary: Get Price List
      operationId: get_price_list
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    put:
      tags:
        - Price List
      summary: Update Price List
      operationId: update_price_list
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceListInSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
    delete:
      tags:
        - Price List
      summary: Delete Price List
      operationId: delete_price_list
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/vehicle:
    get:
      tags:
        - Vehicle
      summary: List Vehicles
      operationId: list_vehicles
      parameters:
        - description: 'Valid filters: '
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: '
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Vehicle Get
                type: array
                items:
                  $ref: '#/components/schemas/VehicleOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/vehicle/picker/make-year-ranges:
    get:
      tags:
        - Vehicle Picker
      summary: Get Make Year Ranges
      operationId: list_vehicle_picker_make_year_ranges
      parameters:
        - required: true
          schema:
            $ref: '#/components/schemas/VehicleCountry'
          name: country
          in: query
        - description: "Comma-separated list of make-year ranges, each follows the format make[:start][:end]. Some examples:\n    \n\tacura,bmw,honda\n    \nAll years for the acura, bmw, and honda makes\n    \n\tacura:1984,bmw::2020,honda:2000:2020\n    \nAcura starting with 1984, BMW ending with 2020, Honda starting with 2000 and ending with 2020\n    "
          required: true
          schema:
            title: Active Makes
            type: string
            description: "Comma-separated list of make-year ranges, each follows the format make[:start][:end]. Some examples:\n    \n\tacura,bmw,honda\n    \nAll years for the acura, bmw, and honda makes\n    \n\tacura:1984,bmw::2020,honda:2000:2020\n    \nAcura starting with 1984, BMW ending with 2020, Honda starting with 2000 and ending with 2020\n    "
          name: active_makes
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Model
            type: string
            description: Comma-separated list of values to filter by
          name: url_model
          in: query
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MakeYearRangeOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/vehicle/picker/years:
    get:
      tags:
        - Vehicle Picker
      summary: Get Years
      operationId: list_vehicle_picker_years
      parameters:
        - required: true
          schema:
            $ref: '#/components/schemas/VehicleCountry'
          name: country
          in: query
        - description: "Comma-separated list of make-year ranges, each follows the format make[:start][:end]. Some examples:\n    \n\tacura,bmw,honda\n    \nAll years for the acura, bmw, and honda makes\n    \n\tacura:1984,bmw::2020,honda:2000:2020\n    \nAcura starting with 1984, BMW ending with 2020, Honda starting with 2000 and ending with 2020\n    "
          required: true
          schema:
            title: Active Makes
            type: string
            description: "Comma-separated list of make-year ranges, each follows the format make[:start][:end]. Some examples:\n    \n\tacura,bmw,honda\n    \nAll years for the acura, bmw, and honda makes\n    \n\tacura:1984,bmw::2020,honda:2000:2020\n    \nAcura starting with 1984, BMW ending with 2020, Honda starting with 2000 and ending with 2020\n    "
          name: active_makes
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Make
            type: string
            description: Comma-separated list of values to filter by
          name: url_make
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Model
            type: string
            description: Comma-separated list of values to filter by
          name: url_model
          in: query
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/vehicle/picker/makes:
    get:
      tags:
        - Vehicle Picker
      summary: Get Makes
      operationId: list_vehicle_picker_makes
      parameters:
        - required: true
          schema:
            $ref: '#/components/schemas/VehicleCountry'
          name: country
          in: query
        - description: "Comma-separated list of make-year ranges, each follows the format make[:start][:end]. Some examples:\n    \n\tacura,bmw,honda\n    \nAll years for the acura, bmw, and honda makes\n    \n\tacura:1984,bmw::2020,honda:2000:2020\n    \nAcura starting with 1984, BMW ending with 2020, Honda starting with 2000 and ending with 2020\n    "
          required: true
          schema:
            title: Active Makes
            type: string
            description: "Comma-separated list of make-year ranges, each follows the format make[:start][:end]. Some examples:\n    \n\tacura,bmw,honda\n    \nAll years for the acura, bmw, and honda makes\n    \n\tacura:1984,bmw::2020,honda:2000:2020\n    \nAcura starting with 1984, BMW ending with 2020, Honda starting with 2000 and ending with 2020\n    "
          name: active_makes
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Year
            type: integer
            description: Comma-separated list of values to filter by
          name: url_year
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Model
            type: string
            description: Comma-separated list of values to filter by
          name: url_model
          in: query
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/vehicle/picker/models:
    get:
      tags:
        - Vehicle Picker
      summary: Get Models
      operationId: list_vehicle_picker_models
      parameters:
        - required: true
          schema:
            $ref: '#/components/schemas/VehicleCountry'
          name: country
          in: query
        - description: "Comma-separated list of make-year ranges, each follows the format make[:start][:end]. Some examples:\n    \n\tacura,bmw,honda\n    \nAll years for the acura, bmw, and honda makes\n    \n\tacura:1984,bmw::2020,honda:2000:2020\n    \nAcura starting with 1984, BMW ending with 2020, Honda starting with 2000 and ending with 2020\n    "
          required: true
          schema:
            title: Active Makes
            type: string
            description: "Comma-separated list of make-year ranges, each follows the format make[:start][:end]. Some examples:\n    \n\tacura,bmw,honda\n    \nAll years for the acura, bmw, and honda makes\n    \n\tacura:1984,bmw::2020,honda:2000:2020\n    \nAcura starting with 1984, BMW ending with 2020, Honda starting with 2000 and ending with 2020\n    "
          name: active_makes
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Year
            type: integer
            description: Comma-separated list of values to filter by
          name: url_year
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Make
            type: string
            description: Comma-separated list of values to filter by
          name: url_make
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Model
            type: string
            description: Comma-separated list of values to filter by
          name: url_model
          in: query
        - description: 'Comma-separated list of vehicle types, e.g., CAR, VAN'
          required: false
          schema:
            title: Vehicle Types
            type: string
            description: 'Comma-separated list of vehicle types, e.g., CAR, VAN'
          name: vehicle_types
          in: query
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/vehicle/picker/vehicles:
    get:
      tags:
        - Vehicle Picker
      summary: Get Vehicles
      operationId: list_vehicle_picker_vehicles
      parameters:
        - required: true
          schema:
            $ref: '#/components/schemas/VehicleCountry'
          name: country
          in: query
        - description: "Comma-separated list of make-year ranges, each follows the format make[:start][:end]. Some examples:\n    \n\tacura,bmw,honda\n    \nAll years for the acura, bmw, and honda makes\n    \n\tacura:1984,bmw::2020,honda:2000:2020\n    \nAcura starting with 1984, BMW ending with 2020, Honda starting with 2000 and ending with 2020\n    "
          required: true
          schema:
            title: Active Makes
            type: string
            description: "Comma-separated list of make-year ranges, each follows the format make[:start][:end]. Some examples:\n    \n\tacura,bmw,honda\n    \nAll years for the acura, bmw, and honda makes\n    \n\tacura:1984,bmw::2020,honda:2000:2020\n    \nAcura starting with 1984, BMW ending with 2020, Honda starting with 2000 and ending with 2020\n    "
          name: active_makes
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Year
            type: integer
            description: Comma-separated list of values to filter by
          name: url_year
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Make
            type: string
            description: Comma-separated list of values to filter by
          name: url_make
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Model
            type: string
            description: Comma-separated list of values to filter by
          name: url_model
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Trim
            type: string
            description: Comma-separated list of values to filter by
          name: url_trim
          in: query
        - description: Comma-separated list of values to filter by
          required: false
          schema:
            title: Url Engine
            type: string
            description: Comma-separated list of values to filter by
          name: url_engine
          in: query
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/vehicle-list:
    get:
      tags:
        - Vehicle List
      summary: List Vehicle Lists
      operationId: list_vehicle_lists
      parameters:
        - description: 'Valid filters: '
          required: false
          schema:
            title: Filters
            type: string
            description: 'Valid filters: '
          name: filters
          in: query
        - required: false
          schema:
            title: Limit
            maximum: 50
            exclusiveMinimum: 0
            type: integer
            default: 50
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Catalog Vehicle List Get
                type: array
                items:
                  $ref: '#/components/schemas/VehicleListOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/vehicle-list/{id}':
    get:
      tags:
        - Vehicle List
      summary: Get Vehicle List
      operationId: get_vehicle_list
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleListOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/bulk/import/{id}':
    get:
      tags:
        - Bulk
      summary: Get Bulk Import
      operationId: get_bulk_import
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkImportOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/bulk/import:
    post:
      tags:
        - Bulk
      summary: Create Bulk Import
      operationId: create_bulk_import
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkImportInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  '/catalog/bulk/export/{id}':
    get:
      tags:
        - Bulk
      summary: Get Bulk Export
      operationId: get_bulk_export
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkExportOutSchema'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
  /catalog/bulk/export:
    post:
      tags:
        - Bulk
      summary: Create Bulk Export
      operationId: create_bulk_export
      parameters:
        - required: true
          schema:
            title: Rp-Merchant-Id
            type: integer
          name: RP-Merchant-Id
          in: header
        - description: >-
            Correlation ID that is always echoed back as a response header
            RP-Correlation-Id. Meant for tracing
                across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          required: false
          schema:
            title: Rp-Correlation-Id
            type: string
            description: >-
              Correlation ID that is always echoed back as a response header
              RP-Correlation-Id. Meant for tracing
                  across internal services only, but for testing purposes a random UUID will be generated if the header isn't set.
          name: RP-Correlation-Id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkExportInSchema'
        required: true
      responses:
        '201':
          description: Successful Response
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBasic: []
components:
  schemas:
    ApplicationInSchema:
      title: ApplicationInSchema
      required:
        - vehicle
        - isActive
      type: object
      properties:
        alsoKnownAs:
          title: Alsoknownas
          type: array
          items:
            type: string
        application:
          title: Application
          type: string
        asin:
          title: Asin
          type: string
        colors:
          title: Colors
          type: array
          items:
            type: string
        condition:
          $ref: '#/components/schemas/Condition'
        consumerCategories:
          title: Consumercategories
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        contactSetting:
          $ref: '#/components/schemas/ContactSetting'
        customUrl:
          title: Customurl
          type: string
        description:
          title: Description
          type: string
        dimensions:
          $ref: '#/components/schemas/DimensionsSchema'
        ebayCategoryId:
          title: Ebaycategoryid
          type: integer
        fixedShippingType:
          $ref: '#/components/schemas/FixedShippingType'
        footnote:
          title: Footnote
          type: string
        group:
          title: Group
          type: string
        hasVisualization:
          title: Hasvisualization
          type: boolean
        illustrationCallout:
          title: Illustrationcallout
          type: string
        illustrationCode:
          title: Illustrationcode
          type: string
        imageMetadata:
          title: Imagemetadata
          type: object
          additionalProperties:
            anyOf:
              - type: boolean
              - type: array
                items:
                  type: string
        isDiscontinued:
          title: Isdiscontinued
          type: boolean
        isExcludedFromShoppingFeeds:
          title: Isexcludedfromshoppingfeeds
          type: boolean
        isFastMover:
          title: Isfastmover
          type: boolean
        isFeaturedProduct:
          title: Isfeaturedproduct
          type: boolean
        isFitmentHidden:
          title: Isfitmenthidden
          type: boolean
        isHazmat:
          title: Ishazmat
          type: boolean
        isHotDeal:
          title: Ishotdeal
          type: boolean
        isNonreturnable:
          title: Isnonreturnable
          type: boolean
        isNotForSale:
          title: Isnotforsale
          type: boolean
        isProductPageIndexed:
          title: Isproductpageindexed
          type: boolean
        isShipsInOwnBox:
          title: Isshipsinownbox
          type: boolean
        isUniversal:
          title: Isuniversal
          type: boolean
        isVinRequired:
          title: Isvinrequired
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        laborTime:
          title: Labortime
          type: number
        metaDescription:
          title: Metadescription
          type: string
        metaTitle:
          title: Metatitle
          type: string
        name:
          title: Name
          type: string
        outOfStockThreshold:
          title: Outofstockthreshold
          type: integer
        partTerminologyId:
          title: Partterminologyid
          type: integer
        position:
          title: Position
          type: string
        requiredMpns:
          title: Requiredmpns
          type: array
          items:
            type: string
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        rpCategories:
          title: Rpcategories
          type: array
          items:
            type: string
        subgroup:
          title: Subgroup
          type: string
        taxClass:
          $ref: '#/components/schemas/TaxClass'
        upc:
          title: Upc
          type: string
        urlGroup:
          title: Urlgroup
          type: string
        urlSubgroup:
          title: Urlsubgroup
          type: string
        vehicleClass:
          $ref: '#/components/schemas/VehicleClass'
        vehicle:
          $ref: '#/components/schemas/VehicleRefSchema'
        isActive:
          title: Isactive
          type: boolean
        productId:
          title: Productid
          type: integer
          description: >-
            Product id used in place of the path parameter for bulk-creating
            applications.
      additionalProperties: false
    ApplicationOutSchema:
      title: ApplicationOutSchema
      required:
        - vehicle
        - isActive
        - id
        - createdTs
        - updatedTs
      type: object
      properties:
        alsoKnownAs:
          title: Alsoknownas
          type: array
          items:
            type: string
        application:
          title: Application
          type: string
        asin:
          title: Asin
          type: string
        colors:
          title: Colors
          type: array
          items:
            type: string
        condition:
          $ref: '#/components/schemas/Condition'
        consumerCategories:
          title: Consumercategories
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        contactSetting:
          $ref: '#/components/schemas/ContactSetting'
        customUrl:
          title: Customurl
          type: string
        description:
          title: Description
          type: string
        dimensions:
          $ref: '#/components/schemas/DimensionsSchema'
        ebayCategoryId:
          title: Ebaycategoryid
          type: integer
        fixedShippingType:
          $ref: '#/components/schemas/FixedShippingType'
        footnote:
          title: Footnote
          type: string
        group:
          title: Group
          type: string
        hasVisualization:
          title: Hasvisualization
          type: boolean
        illustrationCallout:
          title: Illustrationcallout
          type: string
        illustrationCode:
          title: Illustrationcode
          type: string
        imageMetadata:
          title: Imagemetadata
          type: object
          additionalProperties:
            anyOf:
              - type: boolean
              - type: array
                items:
                  type: string
        isDiscontinued:
          title: Isdiscontinued
          type: boolean
        isExcludedFromShoppingFeeds:
          title: Isexcludedfromshoppingfeeds
          type: boolean
        isFastMover:
          title: Isfastmover
          type: boolean
        isFeaturedProduct:
          title: Isfeaturedproduct
          type: boolean
        isFitmentHidden:
          title: Isfitmenthidden
          type: boolean
        isHazmat:
          title: Ishazmat
          type: boolean
        isHotDeal:
          title: Ishotdeal
          type: boolean
        isNonreturnable:
          title: Isnonreturnable
          type: boolean
        isNotForSale:
          title: Isnotforsale
          type: boolean
        isProductPageIndexed:
          title: Isproductpageindexed
          type: boolean
        isShipsInOwnBox:
          title: Isshipsinownbox
          type: boolean
        isUniversal:
          title: Isuniversal
          type: boolean
        isVinRequired:
          title: Isvinrequired
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        laborTime:
          title: Labortime
          type: number
        metaDescription:
          title: Metadescription
          type: string
        metaTitle:
          title: Metatitle
          type: string
        name:
          title: Name
          type: string
        outOfStockThreshold:
          title: Outofstockthreshold
          type: integer
        partTerminologyId:
          title: Partterminologyid
          type: integer
        position:
          title: Position
          type: string
        requiredMpns:
          title: Requiredmpns
          type: array
          items:
            type: string
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        rpCategories:
          title: Rpcategories
          type: array
          items:
            type: string
        subgroup:
          title: Subgroup
          type: string
        taxClass:
          $ref: '#/components/schemas/TaxClass'
        upc:
          title: Upc
          type: string
        urlGroup:
          title: Urlgroup
          type: string
        urlSubgroup:
          title: Urlsubgroup
          type: string
        vehicleClass:
          $ref: '#/components/schemas/VehicleClass'
        vehicle:
          $ref: '#/components/schemas/VehicleRefSchema'
        isActive:
          title: Isactive
          type: boolean
        productId:
          title: Productid
          type: integer
          description: >-
            Product id used in place of the path parameter for bulk-creating
            applications.
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
      additionalProperties: false
    AttributeInSchema:
      title: AttributeInSchema
      required:
        - name
        - type
        - value
      type: object
      properties:
        name:
          title: Name
          type: string
        type:
          $ref: '#/components/schemas/AttributeType'
        value:
          title: Value
          anyOf:
            - $ref: '#/components/schemas/BoolValueInSchema'
            - $ref: '#/components/schemas/StringValueInSchema'
      additionalProperties: false
    AttributeOutSchema:
      title: AttributeOutSchema
      required:
        - id
        - name
        - type
        - values
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
        type:
          $ref: '#/components/schemas/AttributeType'
        values:
          $ref: '#/components/schemas/AttributeValueCollectionOutSchema'
      additionalProperties: false
    AttributeType:
      title: AttributeType
      enum:
        - BOOL
        - CONDITION
        - CONTACT_SETTING
        - DICT
        - DIMENSIONS
        - FIXED_SHIPPING_TYPE
        - FLOAT
        - INTEGER
        - LIST
        - RESTRICTION_TYPE
        - STRING
        - TAX_CLASS
        - VEHICLE_CLASS
      type: string
      description: An enumeration.
    AttributeValueCollectionOutSchema:
      title: AttributeValueCollectionOutSchema
      required:
        - items
      type: object
      properties:
        items:
          title: Items
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/BoolValueOutSchema'
              - $ref: '#/components/schemas/IntegerValueOutSchema'
              - $ref: '#/components/schemas/FloatValueOutSchema'
              - $ref: '#/components/schemas/StringValueOutSchema'
      additionalProperties: false
    BoolValueInSchema:
      title: BoolValueInSchema
      required:
        - locale
        - isActive
        - value
      type: object
      properties:
        locale:
          title: Locale
          type: string
        isActive:
          title: Isactive
          type: boolean
        value:
          title: Value
          type: boolean
      additionalProperties: false
    BoolValueOutSchema:
      title: BoolValueOutSchema
      required:
        - id
        - createdTs
        - updatedTs
        - locale
        - isActive
        - value
      type: object
      properties:
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
        locale:
          title: Locale
          type: string
        isActive:
          title: Isactive
          type: boolean
        value:
          title: Value
          type: boolean
      additionalProperties: false
    BrandCollectionInSchema:
      title: BrandCollectionInSchema
      type: object
      properties:
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/BrandInSchema'
      additionalProperties: false
    BrandInSchema:
      title: BrandInSchema
      required:
        - name
      type: object
      properties:
        acesBrandId:
          title: Acesbrandid
          type: integer
        acesMakeIds:
          title: Acesmakeids
          type: array
          items:
            type: integer
        name:
          title: Name
          type: string
      additionalProperties: false
    BrandOutSchema:
      title: BrandOutSchema
      required:
        - name
        - id
      type: object
      properties:
        acesBrandId:
          title: Acesbrandid
          type: integer
        acesMakeIds:
          title: Acesmakeids
          type: array
          items:
            type: integer
        name:
          title: Name
          type: string
        id:
          title: Id
          type: integer
      additionalProperties: false
    BrandOwnerInSchema:
      title: BrandOwnerInSchema
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          type: string
      additionalProperties: false
    BrandOwnerOutSchema:
      title: BrandOwnerOutSchema
      required:
        - name
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        id:
          title: Id
          type: integer
      additionalProperties: false
    BrandOwnerRefSchema:
      title: BrandOwnerRefSchema
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: integer
      additionalProperties: false
    BrandRefSchema:
      title: BrandRefSchema
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
      additionalProperties: false
    BulkExportInSchema:
      title: BulkExportInSchema
      required:
        - type
        - sourceBulkJobId
        - query
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BulkJobType'
        sourceBulkJobId:
          title: Sourcebulkjobid
          type: integer
        query:
          title: Query
          type: string
      additionalProperties: false
    BulkExportOutSchema:
      title: BulkExportOutSchema
      required:
        - type
        - sourceBulkJobId
        - query
        - id
        - status
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BulkJobType'
        sourceBulkJobId:
          title: Sourcebulkjobid
          type: integer
        query:
          title: Query
          type: string
        id:
          title: Id
          type: integer
        status:
          $ref: '#/components/schemas/BulkJobStatus'
        resultUrl:
          title: Resulturl
          type: string
        processedCount:
          title: Processedcount
          type: integer
          default: 0
      additionalProperties: false
    BulkImportInSchema:
      title: BulkImportInSchema
      required:
        - type
        - sourceBulkJobId
        - sourceUrl
        - updateRule
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BulkJobType'
        sourceBulkJobId:
          title: Sourcebulkjobid
          type: integer
        sourceUrl:
          title: Sourceurl
          type: string
        updateRule:
          $ref: '#/components/schemas/BulkJobUpdateRule'
      additionalProperties: false
    BulkImportOutSchema:
      title: BulkImportOutSchema
      required:
        - type
        - sourceBulkJobId
        - sourceUrl
        - updateRule
        - id
        - status
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BulkJobType'
        sourceBulkJobId:
          title: Sourcebulkjobid
          type: integer
        sourceUrl:
          title: Sourceurl
          type: string
        updateRule:
          $ref: '#/components/schemas/BulkJobUpdateRule'
        id:
          title: Id
          type: integer
        status:
          $ref: '#/components/schemas/BulkJobStatus'
        resultUrl:
          title: Resulturl
          type: string
        processedCount:
          title: Processedcount
          type: integer
          default: 0
        addedCount:
          title: Addedcount
          type: integer
          default: 0
        warningCount:
          title: Warningcount
          type: integer
          default: 0
        errorCount:
          title: Errorcount
          type: integer
          default: 0
      additionalProperties: false
    BulkJobStatus:
      title: BulkJobStatus
      enum:
        - CREATED
        - IN_PROGRESS
        - COMPLETED
        - FAILED
      description: An enumeration.
    BulkJobType:
      title: BulkJobType
      enum:
        - IMPORT_PRODUCT_FITMENT
        - IMPORT_PRODUCT_IMAGES
        - IMPORT_PRODUCTS
        - EXPORT_PRODUCTS
      description: An enumeration.
    BulkJobUpdateRule:
      title: BulkJobUpdateRule
      enum:
        - INSERT
        - REPLACE
        - UPDATE
        - UPSERT
      description: An enumeration.
    BulkPriceResultSchema:
      title: BulkPriceResultSchema
      type: object
      properties:
        productId:
          title: Productid
          type: integer
          description: Product id.
        status:
          title: Status
          type: string
          description: Result of the respective product's operation.
        priceId:
          title: Priceid
          type: integer
          description: Price id.
      additionalProperties: false
    BulkPricesResultsOutSchema:
      title: BulkPricesResultsOutSchema
      type: object
      properties:
        results:
          title: Results
          type: array
          items:
            $ref: '#/components/schemas/BulkPriceResultSchema'
          description: >-
            Array of results (product_id, price_id, status) with each index
            corresponding to the original request array.
          default: []
      additionalProperties: false
    BulkProductApplicationResultSchema:
      title: BulkProductApplicationResultSchema
      type: object
      properties:
        productId:
          title: Productid
          type: integer
          description: Product id.
        status:
          title: Status
          type: string
          description: Result of the respective product's operation.
        applicationId:
          title: Applicationid
          type: integer
          description: Application id.
        vehicleId:
          title: Vehicleid
          type: integer
          description: Vehicle id.
      additionalProperties: false
    BulkProductResultSchema:
      title: BulkProductResultSchema
      type: object
      properties:
        productId:
          title: Productid
          type: integer
          description: Product id.
        status:
          title: Status
          type: string
          description: Result of the respective product's operation.
      additionalProperties: false
    BulkProductsApplicationsResultsOutSchema:
      title: BulkProductsApplicationsResultsOutSchema
      type: object
      properties:
        results:
          title: Results
          type: array
          items:
            $ref: '#/components/schemas/BulkProductApplicationResultSchema'
          description: >-
            Array of results (application_id, product_id, vehicle_id, status)
            with each index corresponding to the original request array.
          default: []
      additionalProperties: false
    BulkProductsResultsOutSchema:
      title: BulkProductsResultsOutSchema
      type: object
      properties:
        results:
          title: Results
          type: array
          items:
            $ref: '#/components/schemas/BulkProductResultSchema'
          description: >-
            Array of results (product_id, status) with each index corresponding
            to the original request array.
          default: []
      additionalProperties: false
    BundleReferenceCollectionInSchema:
      title: BundleReferenceCollectionInSchema
      required:
        - items
      type: object
      properties:
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/BundleReferenceInSchema'
      additionalProperties: false
    BundleReferenceCollectionOutSchema:
      title: BundleReferenceCollectionOutSchema
      required:
        - items
      type: object
      properties:
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/BundleReferenceOutSchema'
      additionalProperties: false
    BundleReferenceInSchema:
      title: BundleReferenceInSchema
      required:
        - referenceProduct
        - quantity
      type: object
      properties:
        referenceProduct:
          $ref: '#/components/schemas/ProductRefSchema'
        quantity:
          title: Quantity
          type: integer
      additionalProperties: false
    BundleReferenceOutSchema:
      title: BundleReferenceOutSchema
      required:
        - referenceProduct
        - quantity
        - createdTs
        - updatedTs
      type: object
      properties:
        referenceProduct:
          $ref: '#/components/schemas/ProductRefSchema'
        quantity:
          title: Quantity
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
      additionalProperties: false
    CatalogInSchema:
      title: CatalogInSchema
      required:
        - name
        - vehicleList
        - vehicleType
        - isLicensable
      type: object
      properties:
        name:
          title: Name
          type: string
        vehicleList:
          $ref: '#/components/schemas/VehicleListRefSchema'
        vehicleType:
          $ref: '#/components/schemas/VehicleListType'
        isLicensable:
          title: Islicensable
          type: boolean
      additionalProperties: false
    CatalogOutSchema:
      title: CatalogOutSchema
      required:
        - name
        - vehicleList
        - vehicleType
        - isLicensable
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        vehicleList:
          $ref: '#/components/schemas/VehicleListRefSchema'
        vehicleType:
          $ref: '#/components/schemas/VehicleListType'
        isLicensable:
          title: Islicensable
          type: boolean
        id:
          title: Id
          type: integer
      additionalProperties: false
    CatalogRefSchema:
      title: CatalogRefSchema
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: integer
      additionalProperties: false
    CatalogSubtype:
      title: CatalogSubtype
      enum:
        - ACCESSORIES
        - COLLISION
        - KITS
        - MECHANICAL
        - MERCHANDISE
        - PARTS
        - PERFORMANCE
      description: An enumeration.
    CatalogType:
      title: CatalogType
      enum:
        - ACCESSORIES
        - LICENSED_PARTS
        - PARTS
        - PERFORMANCE
      description: An enumeration.
    CatalogUserInSchema:
      title: CatalogUserInSchema
      required:
        - brandOwner
        - catalog
        - merchantId
        - name
      type: object
      properties:
        brandOwner:
          $ref: '#/components/schemas/BrandOwnerRefSchema'
        catalog:
          $ref: '#/components/schemas/CatalogRefSchema'
        merchantId:
          title: Merchantid
          type: integer
        name:
          title: Name
          type: string
      additionalProperties: false
    CatalogUserOutSchema:
      title: CatalogUserOutSchema
      required:
        - brandOwner
        - catalog
        - merchantId
        - name
        - createdTs
        - id
        - updatedTs
      type: object
      properties:
        brandOwner:
          $ref: '#/components/schemas/BrandOwnerRefSchema'
        catalog:
          $ref: '#/components/schemas/CatalogRefSchema'
        merchantId:
          title: Merchantid
          type: integer
        name:
          title: Name
          type: string
        createdTs:
          title: Createdts
          type: string
          format: date-time
        id:
          title: Id
          type: integer
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
      additionalProperties: false
    CategoryInSchema:
      title: CategoryInSchema
      required:
        - name
        - level
        - lookupKey
        - isLeaf
        - isExcluded
        - isVisible
        - showSubcategoryProducts
        - imageDisplay
      type: object
      properties:
        parentCategoryId:
          title: Parentcategoryid
          type: integer
        ancestorIds:
          title: Ancestorids
          type: string
        name:
          title: Name
          type: string
        level:
          title: Level
          type: integer
        lookupKey:
          title: Lookupkey
          type: string
        isLeaf:
          title: Isleaf
          type: boolean
        isExcluded:
          title: Isexcluded
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        showSubcategoryProducts:
          title: Showsubcategoryproducts
          type: integer
        imageDisplay:
          title: Imagedisplay
          type: string
        breadcrumbs:
          title: Breadcrumbs
          type: array
          items:
            type: string
      additionalProperties: false
    CategoryItemsSchema:
      title: CategoryItemsSchema
      required:
        - paging
        - items
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/OffsetPagingInfoSchema'
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/CategoryOutSchema'
      additionalProperties: false
    CategoryListInSchema:
      title: CategoryListInSchema
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          type: string
      additionalProperties: false
    CategoryListItemsSchema:
      title: CategoryListItemsSchema
      required:
        - paging
        - items
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/OffsetPagingInfoSchema'
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/CategoryListOutSchema'
      additionalProperties: false
    CategoryListOutSchema:
      title: CategoryListOutSchema
      required:
        - name
        - id
        - sourceId
        - vehicleListId
        - createdTs
        - updatedTs
      type: object
      properties:
        name:
          title: Name
          type: string
        id:
          title: Id
          type: integer
        sourceId:
          title: Sourceid
          type: integer
        vehicleListId:
          title: Vehiclelistid
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
      additionalProperties: false
    CategoryOutSchema:
      title: CategoryOutSchema
      required:
        - name
        - level
        - lookupKey
        - isLeaf
        - isExcluded
        - isVisible
        - showSubcategoryProducts
        - imageDisplay
        - id
        - categoryListId
        - createdTs
        - updatedTs
      type: object
      properties:
        parentCategoryId:
          title: Parentcategoryid
          type: integer
        ancestorIds:
          title: Ancestorids
          type: string
        name:
          title: Name
          type: string
        level:
          title: Level
          type: integer
        lookupKey:
          title: Lookupkey
          type: string
        isLeaf:
          title: Isleaf
          type: boolean
        isExcluded:
          title: Isexcluded
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        showSubcategoryProducts:
          title: Showsubcategoryproducts
          type: integer
        imageDisplay:
          title: Imagedisplay
          type: string
        breadcrumbs:
          title: Breadcrumbs
          type: array
          items:
            type: string
        id:
          title: Id
          type: integer
        categoryListId:
          title: Categorylistid
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
      additionalProperties: false
    CategoryRefSchema:
      title: CategoryRefSchema
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: integer
      additionalProperties: false
    Condition:
      title: Condition
      enum:
        - Remanufactured
        - New
      description: An enumeration.
    ContactSetting:
      title: ContactSetting
      enum:
        - NONE
        - PRICE
        - AVAILABILITY
      description: An enumeration.
    CreatePricesInSchema:
      title: CreatePricesInSchema
      type: object
      properties:
        items:
          title: Items
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/PriceInSchema'
          description: Array of prices.
          default: []
      additionalProperties: false
    CreateProductsApplicationsInSchema:
      title: CreateProductsApplicationsInSchema
      type: object
      properties:
        items:
          title: Items
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/ApplicationInSchema'
          description: Array of applications.
          default: []
      additionalProperties: false
    CreateProductsInSchema:
      title: CreateProductsInSchema
      type: object
      properties:
        items:
          title: Items
          maxItems: 100
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/ProductInSchema'
              - $ref: '#/components/schemas/ProductBundleInSchema'
              - $ref: '#/components/schemas/ProductMasterVariantInSchema'
              - $ref: '#/components/schemas/ProductVariantInSchema'
          description: Array of products.
          default: []
      additionalProperties: false
    Currency:
      title: Currency
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOV
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BYN
        - BZD
        - CAD
        - CDF
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MXV
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SRD
        - SSP
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - USN
        - USS
        - UYI
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XBA
        - XBB
        - XBC
        - XBD
        - XCD
        - XDR
        - XFU
        - XOF
        - XPD
        - XPF
        - XPT
        - XSU
        - XTS
        - XUA
        - YER
        - ZAR
        - ZMW
        - ZWL
      description: 'ISO 4217 three-letter currency codes '
    DeleteProductsInSchema:
      title: DeleteProductsInSchema
      type: object
      properties:
        productIds:
          title: Productids
          maxItems: 100
          type: array
          items:
            type: integer
          description: Array of product ids to delete.
          default: []
      additionalProperties: false
    DimensionUnit:
      title: DimensionUnit
      enum:
        - CM
        - IN
      description: An enumeration.
    DimensionsSchema:
      title: DimensionsSchema
      required:
        - dimensionUnit
        - weightUnit
      type: object
      properties:
        length:
          title: Length
          type: number
        width:
          title: Width
          type: number
        height:
          title: Height
          type: number
        weight:
          title: Weight
          type: number
        dimensionUnit:
          $ref: '#/components/schemas/DimensionUnit'
        weightUnit:
          $ref: '#/components/schemas/WeightUnit'
      additionalProperties: false
    EsProductType:
      title: EsProductType
      enum:
        - KIT
        - SIMPLE
        - VARIANT
        - VARIANT_MASTER
      description: An enumeration.
    FixedShippingType:
      title: FixedShippingType
      enum:
        - EXPEDITED
        - NONE
        - PICKUP
        - STANDARD
      description: An enumeration.
    FloatValueOutSchema:
      title: FloatValueOutSchema
      required:
        - id
        - createdTs
        - updatedTs
        - locale
        - isActive
        - value
      type: object
      properties:
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
        locale:
          title: Locale
          type: string
        isActive:
          title: Isactive
          type: boolean
        value:
          title: Value
          type: number
      additionalProperties: false
    FullProductRefSchema:
      title: FullProductRefSchema
      required:
        - id
        - skuStripped
      type: object
      properties:
        id:
          title: Id
          type: integer
        skuStripped:
          title: Skustripped
          type: string
      additionalProperties: false
    HTTPValidationError:
      title: ErrorsModel
      type: object
      properties:
        errors:
          title: Errors
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      required:
        - errors
      additionalProperties: false
    ImageInfoSchema:
      title: ImageInfoSchema
      required:
        - type
        - url
        - size
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ImageType'
        url:
          title: Url
          type: string
        size:
          $ref: '#/components/schemas/ImageSizeSchema'
      additionalProperties: false
    ImageMediaInSchema:
      title: ImageMediaInSchema
      required:
        - type
        - mediaList
        - product
        - isPrimary
        - fileChecksum
      type: object
      properties:
        type:
          $ref: '#/components/schemas/MediaType'
        mediaList:
          $ref: '#/components/schemas/MediaListRefSchema'
        product:
          $ref: '#/components/schemas/FullProductRefSchema'
        isPrimary:
          title: Isprimary
          type: boolean
        fileChecksum:
          title: Filechecksum
          type: string
        mediaGroup:
          title: Mediagroup
          type: string
        inactiveReason:
          title: Inactivereason
          type: string
        images:
          title: Images
          type: array
          items:
            $ref: '#/components/schemas/ImageInfoSchema'
          default: []
      additionalProperties: false
    ImageMediaItemsSchema:
      title: ImageMediaItemsSchema
      required:
        - paging
        - items
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/OffsetPagingInfoSchema'
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/ImageMediaOutSchema'
      additionalProperties: false
    ImageMediaOutSchema:
      title: ImageMediaOutSchema
      required:
        - type
        - mediaList
        - product
        - isPrimary
        - fileChecksum
        - id
        - createdTs
        - updatedTs
      type: object
      properties:
        type:
          $ref: '#/components/schemas/MediaType'
        mediaList:
          $ref: '#/components/schemas/MediaListRefSchema'
        product:
          $ref: '#/components/schemas/FullProductRefSchema'
        isPrimary:
          title: Isprimary
          type: boolean
        fileChecksum:
          title: Filechecksum
          type: string
        mediaGroup:
          title: Mediagroup
          type: string
        inactiveReason:
          title: Inactivereason
          type: string
        images:
          title: Images
          type: array
          items:
            $ref: '#/components/schemas/ImageInfoSchema'
          default: []
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
      additionalProperties: false
    ImageSizeSchema:
      title: ImageSizeSchema
      required:
        - width
        - height
      type: object
      properties:
        width:
          title: Width
          type: integer
        height:
          title: Height
          type: integer
      additionalProperties: false
    ImageType:
      title: ImageType
      enum:
        - Image
        - Preview
        - Thumb
      description: An enumeration.
    IntegerValueOutSchema:
      title: IntegerValueOutSchema
      required:
        - id
        - createdTs
        - updatedTs
        - locale
        - isActive
        - value
      type: object
      properties:
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
        locale:
          title: Locale
          type: string
        isActive:
          title: Isactive
          type: boolean
        value:
          title: Value
          type: integer
      additionalProperties: false
    MakeYearRangeOutSchema:
      title: MakeYearRangeOutSchema
      type: object
      properties:
        make:
          title: Make
          anyOf:
            - type: array
              items: {}
            - type: object
              additionalProperties:
                $ref: '#/components/schemas/UiUrlYearRangeOutSchema'
          default: []
      additionalProperties: false
    MasterVariantRefSchema:
      title: MasterVariantRefSchema
      required:
        - id
        - sku
        - skuStripped
      type: object
      properties:
        id:
          title: Id
          type: integer
        sku:
          title: Sku
          type: string
        skuStripped:
          title: Skustripped
          type: string
      additionalProperties: false
    MediaListInSchema:
      title: MediaListInSchema
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          type: string
      additionalProperties: false
    MediaListOutSchema:
      title: MediaListOutSchema
      required:
        - name
        - id
        - createdTs
        - updatedTs
      type: object
      properties:
        name:
          title: Name
          type: string
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
      additionalProperties: false
    MediaListRefSchema:
      title: MediaListRefSchema
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: integer
      additionalProperties: false
    MediaType:
      title: MediaType
      enum:
        - IMAGE
      description: An enumeration.
    MoneySchema:
      title: MoneySchema
      required:
        - currency
        - value
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/SupportedCurrency'
        value:
          title: Value
          type: integer
      additionalProperties: false
    OffsetPagingInfoSchema:
      title: OffsetPagingInfoSchema
      required:
        - limit
        - count
        - total
      type: object
      properties:
        limit:
          title: Limit
          type: integer
          description: The limit query parameter from the request or the default limit
        count:
          title: Count
          type: integer
          description: Total number of models in the response
        total:
          title: Total
          type: integer
          description: Total number of records that match the query
      additionalProperties: false
    OnboardInSchema:
      title: OnboardInSchema
      required:
        - name
        - merchantId
        - region
        - currency
        - defaultVehicleType
      type: object
      properties:
        name:
          title: Name
          type: string
        merchantId:
          title: Merchantid
          type: integer
        region:
          title: Region
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        defaultVehicleType:
          $ref: '#/components/schemas/VehicleListType'
        existingBrands:
          $ref: '#/components/schemas/BrandCollectionInSchema'
      additionalProperties: false
    OptionAttributeInSchema:
      title: OptionAttributeInSchema
      required:
        - name
        - options
      type: object
      properties:
        isRequired:
          title: Isrequired
          type: boolean
          default: false
        name:
          title: Name
          type: string
        options:
          title: Options
          type: array
          items:
            $ref: '#/components/schemas/OptionSchema'
        priority:
          title: Priority
          type: integer
      additionalProperties: false
    OptionAttributeOutSchema:
      title: OptionAttributeOutSchema
      required:
        - name
        - options
        - id
        - createdTs
        - updatedTs
      type: object
      properties:
        isRequired:
          title: Isrequired
          type: boolean
          default: false
        name:
          title: Name
          type: string
        options:
          title: Options
          type: array
          items:
            $ref: '#/components/schemas/OptionSchema'
        priority:
          title: Priority
          type: integer
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
      additionalProperties: false
    OptionModifierSchema:
      title: OptionModifierSchema
      required:
        - type
        - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OptionModifierType'
        value:
          title: Value
          type: number
      additionalProperties: false
    OptionModifierType:
      title: OptionModifierType
      enum:
        - AMOUNT
        - PERCENT
      type: string
      description: An enumeration.
    OptionRefInSchema:
      title: OptionRefInSchema
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: integer
      additionalProperties: false
    OptionRefOutSchema:
      title: OptionRefOutSchema
      required:
        - id
        - optionAttributeId
        - productId
      type: object
      properties:
        id:
          title: Id
          type: integer
        optionAttributeId:
          title: Optionattributeid
          type: integer
        productId:
          title: Productid
          type: integer
      additionalProperties: false
    OptionSchema:
      title: OptionSchema
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: integer
        internalNote:
          title: Internalnote
          type: string
        name:
          title: Name
          type: string
        priceModifier:
          $ref: '#/components/schemas/OptionModifierSchema'
        weightModifier:
          $ref: '#/components/schemas/OptionModifierSchema'
      additionalProperties: false
    PriceInSchema:
      title: PriceInSchema
      required:
        - product
        - msrp
        - cost
        - ecom
        - core
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductRefSchema'
        msrp:
          $ref: '#/components/schemas/MoneySchema'
        cost:
          $ref: '#/components/schemas/MoneySchema'
        ecom:
          $ref: '#/components/schemas/MoneySchema'
        core:
          $ref: '#/components/schemas/MoneySchema'
        id:
          title: Id
          type: integer
          description: >-
            Price id used in place of the path parameter for bulk-updating
            prices.
      additionalProperties: false
    PriceListInSchema:
      title: PriceListInSchema
      required:
        - name
        - region
        - currency
      type: object
      properties:
        name:
          title: Name
          type: string
        region:
          title: Region
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
      additionalProperties: false
    PriceListOutSchema:
      title: PriceListOutSchema
      required:
        - name
        - region
        - currency
        - id
        - createdTs
        - updatedTs
      type: object
      properties:
        name:
          title: Name
          type: string
        region:
          title: Region
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
      additionalProperties: false
    PriceOutSchema:
      title: PriceOutSchema
      required:
        - product
        - msrp
        - cost
        - ecom
        - core
        - id
        - createdTs
        - updatedTs
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductRefSchema'
        msrp:
          $ref: '#/components/schemas/MoneySchema'
        cost:
          $ref: '#/components/schemas/MoneySchema'
        ecom:
          $ref: '#/components/schemas/MoneySchema'
        core:
          $ref: '#/components/schemas/MoneySchema'
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
      additionalProperties: false
    ProductAssociationOutSchema:
      title: ProductAssociationOutSchema
      required:
        - id
        - catalog
        - product
        - createdTs
      type: object
      properties:
        id:
          title: Id
          type: integer
        catalog:
          $ref: '#/components/schemas/CatalogRefSchema'
        product:
          $ref: '#/components/schemas/ProductRefSchema'
        createdTs:
          title: Createdts
          type: string
          format: date-time
      additionalProperties: false
    ProductBundleInSchema:
      title: ProductBundleInSchema
      required:
        - sku
        - mpn
        - brand
        - catalogType
        - catalogSubtype
        - bundleReferences
      type: object
      properties:
        alsoKnownAs:
          title: Alsoknownas
          type: array
          items:
            type: string
        application:
          title: Application
          type: string
        asin:
          title: Asin
          type: string
        colors:
          title: Colors
          type: array
          items:
            type: string
        condition:
          $ref: '#/components/schemas/Condition'
        consumerCategories:
          title: Consumercategories
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        contactSetting:
          $ref: '#/components/schemas/ContactSetting'
        customUrl:
          title: Customurl
          type: string
        description:
          title: Description
          type: string
        dimensions:
          $ref: '#/components/schemas/DimensionsSchema'
        ebayCategoryId:
          title: Ebaycategoryid
          type: integer
        fixedShippingType:
          $ref: '#/components/schemas/FixedShippingType'
        footnote:
          title: Footnote
          type: string
        group:
          title: Group
          type: string
        hasVisualization:
          title: Hasvisualization
          type: boolean
        illustrationCallout:
          title: Illustrationcallout
          type: string
        illustrationCode:
          title: Illustrationcode
          type: string
        imageMetadata:
          title: Imagemetadata
          type: object
          additionalProperties:
            anyOf:
              - type: boolean
              - type: array
                items:
                  type: string
        isDiscontinued:
          title: Isdiscontinued
          type: boolean
        isExcludedFromShoppingFeeds:
          title: Isexcludedfromshoppingfeeds
          type: boolean
        isFastMover:
          title: Isfastmover
          type: boolean
        isFeaturedProduct:
          title: Isfeaturedproduct
          type: boolean
        isFitmentHidden:
          title: Isfitmenthidden
          type: boolean
        isHazmat:
          title: Ishazmat
          type: boolean
        isHotDeal:
          title: Ishotdeal
          type: boolean
        isNonreturnable:
          title: Isnonreturnable
          type: boolean
        isNotForSale:
          title: Isnotforsale
          type: boolean
        isProductPageIndexed:
          title: Isproductpageindexed
          type: boolean
        isShipsInOwnBox:
          title: Isshipsinownbox
          type: boolean
        isUniversal:
          title: Isuniversal
          type: boolean
        isVinRequired:
          title: Isvinrequired
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        laborTime:
          title: Labortime
          type: number
        metaDescription:
          title: Metadescription
          type: string
        metaTitle:
          title: Metatitle
          type: string
        name:
          title: Name
          type: string
        outOfStockThreshold:
          title: Outofstockthreshold
          type: integer
        partTerminologyId:
          title: Partterminologyid
          type: integer
        position:
          title: Position
          type: string
        requiredMpns:
          title: Requiredmpns
          type: array
          items:
            type: string
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        rpCategories:
          title: Rpcategories
          type: array
          items:
            type: string
        subgroup:
          title: Subgroup
          type: string
        taxClass:
          $ref: '#/components/schemas/TaxClass'
        upc:
          title: Upc
          type: string
        urlGroup:
          title: Urlgroup
          type: string
        urlSubgroup:
          title: Urlsubgroup
          type: string
        vehicleClass:
          $ref: '#/components/schemas/VehicleClass'
        sku:
          title: Sku
          type: string
        mpn:
          title: Mpn
          type: string
        brand:
          $ref: '#/components/schemas/BrandRefSchema'
        catalogType:
          $ref: '#/components/schemas/CatalogType'
        catalogSubtype:
          $ref: '#/components/schemas/CatalogSubtype'
        catalog:
          title: Catalog
          type: string
        id:
          title: Id
          type: integer
          description: >-
            Product id used in place of the path parameter for bulk-updating
            products.
        bundleReferences:
          $ref: '#/components/schemas/BundleReferenceCollectionInSchema'
      additionalProperties: false
    ProductBundleOutSchema:
      title: ProductBundleOutSchema
      required:
        - sku
        - mpn
        - brand
        - catalogType
        - catalogSubtype
        - id
        - type
        - skuStripped
        - mpnStripped
        - createdTs
        - updatedTs
        - references
        - bundleReferences
      type: object
      properties:
        alsoKnownAs:
          title: Alsoknownas
          type: array
          items:
            type: string
        application:
          title: Application
          type: string
        asin:
          title: Asin
          type: string
        colors:
          title: Colors
          type: array
          items:
            type: string
        condition:
          $ref: '#/components/schemas/Condition'
        consumerCategories:
          title: Consumercategories
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        contactSetting:
          $ref: '#/components/schemas/ContactSetting'
        customUrl:
          title: Customurl
          type: string
        description:
          title: Description
          type: string
        dimensions:
          $ref: '#/components/schemas/DimensionsSchema'
        ebayCategoryId:
          title: Ebaycategoryid
          type: integer
        fixedShippingType:
          $ref: '#/components/schemas/FixedShippingType'
        footnote:
          title: Footnote
          type: string
        group:
          title: Group
          type: string
        hasVisualization:
          title: Hasvisualization
          type: boolean
        illustrationCallout:
          title: Illustrationcallout
          type: string
        illustrationCode:
          title: Illustrationcode
          type: string
        imageMetadata:
          title: Imagemetadata
          type: object
          additionalProperties:
            anyOf:
              - type: boolean
              - type: array
                items:
                  type: string
        isDiscontinued:
          title: Isdiscontinued
          type: boolean
        isExcludedFromShoppingFeeds:
          title: Isexcludedfromshoppingfeeds
          type: boolean
        isFastMover:
          title: Isfastmover
          type: boolean
        isFeaturedProduct:
          title: Isfeaturedproduct
          type: boolean
        isFitmentHidden:
          title: Isfitmenthidden
          type: boolean
        isHazmat:
          title: Ishazmat
          type: boolean
        isHotDeal:
          title: Ishotdeal
          type: boolean
        isNonreturnable:
          title: Isnonreturnable
          type: boolean
        isNotForSale:
          title: Isnotforsale
          type: boolean
        isProductPageIndexed:
          title: Isproductpageindexed
          type: boolean
        isShipsInOwnBox:
          title: Isshipsinownbox
          type: boolean
        isUniversal:
          title: Isuniversal
          type: boolean
        isVinRequired:
          title: Isvinrequired
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        laborTime:
          title: Labortime
          type: number
        metaDescription:
          title: Metadescription
          type: string
        metaTitle:
          title: Metatitle
          type: string
        name:
          title: Name
          type: string
        outOfStockThreshold:
          title: Outofstockthreshold
          type: integer
        partTerminologyId:
          title: Partterminologyid
          type: integer
        position:
          title: Position
          type: string
        requiredMpns:
          title: Requiredmpns
          type: array
          items:
            type: string
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        rpCategories:
          title: Rpcategories
          type: array
          items:
            type: string
        subgroup:
          title: Subgroup
          type: string
        taxClass:
          $ref: '#/components/schemas/TaxClass'
        upc:
          title: Upc
          type: string
        urlGroup:
          title: Urlgroup
          type: string
        urlSubgroup:
          title: Urlsubgroup
          type: string
        vehicleClass:
          $ref: '#/components/schemas/VehicleClass'
        sku:
          title: Sku
          type: string
        mpn:
          title: Mpn
          type: string
        brand:
          $ref: '#/components/schemas/BrandRefSchema'
        catalogType:
          $ref: '#/components/schemas/CatalogType'
        catalogSubtype:
          $ref: '#/components/schemas/CatalogSubtype'
        catalog:
          title: Catalog
          type: string
        id:
          title: Id
          type: integer
        type:
          $ref: '#/components/schemas/ProductType'
        skuStripped:
          title: Skustripped
          type: string
        mpnStripped:
          title: Mpnstripped
          type: string
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
        references:
          title: References
          type: array
          items:
            $ref: '#/components/schemas/ProductRefSchema'
        bundleReferences:
          $ref: '#/components/schemas/BundleReferenceCollectionOutSchema'
      additionalProperties: false
    ProductCategoryAssociationInSchema:
      title: ProductCategoryAssociationInSchema
      required:
        - product
        - category
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductRefSchema'
        category:
          $ref: '#/components/schemas/CategoryRefSchema'
      additionalProperties: false
    ProductCategoryAssociationItemsSchema:
      title: ProductCategoryAssociationItemsSchema
      required:
        - paging
        - items
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/OffsetPagingInfoSchema'
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/ProductCategoryAssociationOutSchema'
      additionalProperties: false
    ProductCategoryAssociationOutSchema:
      title: ProductCategoryAssociationOutSchema
      required:
        - product
        - category
        - id
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductRefSchema'
        category:
          $ref: '#/components/schemas/CategoryRefSchema'
        id:
          title: Id
          type: integer
      additionalProperties: false
    ProductInSchema:
      title: ProductInSchema
      required:
        - sku
        - mpn
        - brand
        - catalogType
        - catalogSubtype
      type: object
      properties:
        alsoKnownAs:
          title: Alsoknownas
          type: array
          items:
            type: string
        application:
          title: Application
          type: string
        asin:
          title: Asin
          type: string
        colors:
          title: Colors
          type: array
          items:
            type: string
        condition:
          $ref: '#/components/schemas/Condition'
        consumerCategories:
          title: Consumercategories
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        contactSetting:
          $ref: '#/components/schemas/ContactSetting'
        customUrl:
          title: Customurl
          type: string
        description:
          title: Description
          type: string
        dimensions:
          $ref: '#/components/schemas/DimensionsSchema'
        ebayCategoryId:
          title: Ebaycategoryid
          type: integer
        fixedShippingType:
          $ref: '#/components/schemas/FixedShippingType'
        footnote:
          title: Footnote
          type: string
        group:
          title: Group
          type: string
        hasVisualization:
          title: Hasvisualization
          type: boolean
        illustrationCallout:
          title: Illustrationcallout
          type: string
        illustrationCode:
          title: Illustrationcode
          type: string
        imageMetadata:
          title: Imagemetadata
          type: object
          additionalProperties:
            anyOf:
              - type: boolean
              - type: array
                items:
                  type: string
        isDiscontinued:
          title: Isdiscontinued
          type: boolean
        isExcludedFromShoppingFeeds:
          title: Isexcludedfromshoppingfeeds
          type: boolean
        isFastMover:
          title: Isfastmover
          type: boolean
        isFeaturedProduct:
          title: Isfeaturedproduct
          type: boolean
        isFitmentHidden:
          title: Isfitmenthidden
          type: boolean
        isHazmat:
          title: Ishazmat
          type: boolean
        isHotDeal:
          title: Ishotdeal
          type: boolean
        isNonreturnable:
          title: Isnonreturnable
          type: boolean
        isNotForSale:
          title: Isnotforsale
          type: boolean
        isProductPageIndexed:
          title: Isproductpageindexed
          type: boolean
        isShipsInOwnBox:
          title: Isshipsinownbox
          type: boolean
        isUniversal:
          title: Isuniversal
          type: boolean
        isVinRequired:
          title: Isvinrequired
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        laborTime:
          title: Labortime
          type: number
        metaDescription:
          title: Metadescription
          type: string
        metaTitle:
          title: Metatitle
          type: string
        name:
          title: Name
          type: string
        outOfStockThreshold:
          title: Outofstockthreshold
          type: integer
        partTerminologyId:
          title: Partterminologyid
          type: integer
        position:
          title: Position
          type: string
        requiredMpns:
          title: Requiredmpns
          type: array
          items:
            type: string
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        rpCategories:
          title: Rpcategories
          type: array
          items:
            type: string
        subgroup:
          title: Subgroup
          type: string
        taxClass:
          $ref: '#/components/schemas/TaxClass'
        upc:
          title: Upc
          type: string
        urlGroup:
          title: Urlgroup
          type: string
        urlSubgroup:
          title: Urlsubgroup
          type: string
        vehicleClass:
          $ref: '#/components/schemas/VehicleClass'
        sku:
          title: Sku
          type: string
        mpn:
          title: Mpn
          type: string
        brand:
          $ref: '#/components/schemas/BrandRefSchema'
        catalogType:
          $ref: '#/components/schemas/CatalogType'
        catalogSubtype:
          $ref: '#/components/schemas/CatalogSubtype'
        catalog:
          title: Catalog
          type: string
        id:
          title: Id
          type: integer
          description: >-
            Product id used in place of the path parameter for bulk-updating
            products.
      additionalProperties: false
    ProductItemsSchema:
      title: ProductItemsSchema
      required:
        - paging
        - items
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/OffsetPagingInfoSchema'
        items:
          title: Items
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/ProductOutSchema'
              - $ref: '#/components/schemas/ProductBundleOutSchema'
              - $ref: '#/components/schemas/ProductMasterVariantOutSchema'
              - $ref: '#/components/schemas/ProductVariantOutSchema'
      additionalProperties: false
    ProductMasterVariantInSchema:
      title: ProductMasterVariantInSchema
      required:
        - sku
        - mpn
        - brand
        - catalogType
        - catalogSubtype
      type: object
      properties:
        variantOptions:
          title: Variantoptions
          type: array
          items:
            $ref: '#/components/schemas/OptionRefInSchema'
        alsoKnownAs:
          title: Alsoknownas
          type: array
          items:
            type: string
        application:
          title: Application
          type: string
        asin:
          title: Asin
          type: string
        colors:
          title: Colors
          type: array
          items:
            type: string
        condition:
          $ref: '#/components/schemas/Condition'
        consumerCategories:
          title: Consumercategories
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        contactSetting:
          $ref: '#/components/schemas/ContactSetting'
        customUrl:
          title: Customurl
          type: string
        description:
          title: Description
          type: string
        dimensions:
          $ref: '#/components/schemas/DimensionsSchema'
        ebayCategoryId:
          title: Ebaycategoryid
          type: integer
        fixedShippingType:
          $ref: '#/components/schemas/FixedShippingType'
        footnote:
          title: Footnote
          type: string
        group:
          title: Group
          type: string
        hasVisualization:
          title: Hasvisualization
          type: boolean
        illustrationCallout:
          title: Illustrationcallout
          type: string
        illustrationCode:
          title: Illustrationcode
          type: string
        imageMetadata:
          title: Imagemetadata
          type: object
          additionalProperties:
            anyOf:
              - type: boolean
              - type: array
                items:
                  type: string
        isDiscontinued:
          title: Isdiscontinued
          type: boolean
        isExcludedFromShoppingFeeds:
          title: Isexcludedfromshoppingfeeds
          type: boolean
        isFastMover:
          title: Isfastmover
          type: boolean
        isFeaturedProduct:
          title: Isfeaturedproduct
          type: boolean
        isFitmentHidden:
          title: Isfitmenthidden
          type: boolean
        isHazmat:
          title: Ishazmat
          type: boolean
        isHotDeal:
          title: Ishotdeal
          type: boolean
        isNonreturnable:
          title: Isnonreturnable
          type: boolean
        isNotForSale:
          title: Isnotforsale
          type: boolean
        isProductPageIndexed:
          title: Isproductpageindexed
          type: boolean
        isShipsInOwnBox:
          title: Isshipsinownbox
          type: boolean
        isUniversal:
          title: Isuniversal
          type: boolean
        isVinRequired:
          title: Isvinrequired
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        laborTime:
          title: Labortime
          type: number
        metaDescription:
          title: Metadescription
          type: string
        metaTitle:
          title: Metatitle
          type: string
        name:
          title: Name
          type: string
        outOfStockThreshold:
          title: Outofstockthreshold
          type: integer
        partTerminologyId:
          title: Partterminologyid
          type: integer
        position:
          title: Position
          type: string
        requiredMpns:
          title: Requiredmpns
          type: array
          items:
            type: string
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        rpCategories:
          title: Rpcategories
          type: array
          items:
            type: string
        subgroup:
          title: Subgroup
          type: string
        taxClass:
          $ref: '#/components/schemas/TaxClass'
        upc:
          title: Upc
          type: string
        urlGroup:
          title: Urlgroup
          type: string
        urlSubgroup:
          title: Urlsubgroup
          type: string
        vehicleClass:
          $ref: '#/components/schemas/VehicleClass'
        sku:
          title: Sku
          type: string
        mpn:
          title: Mpn
          type: string
        brand:
          $ref: '#/components/schemas/BrandRefSchema'
        catalogType:
          $ref: '#/components/schemas/CatalogType'
        catalogSubtype:
          $ref: '#/components/schemas/CatalogSubtype'
        catalog:
          title: Catalog
          type: string
        id:
          title: Id
          type: integer
          description: >-
            Product id used in place of the path parameter for bulk-updating
            products.
      additionalProperties: false
    ProductMasterVariantOutSchema:
      title: ProductMasterVariantOutSchema
      required:
        - sku
        - mpn
        - brand
        - catalogType
        - catalogSubtype
        - id
        - type
        - skuStripped
        - mpnStripped
        - createdTs
        - updatedTs
        - references
        - variants
      type: object
      properties:
        variantOptions:
          title: Variantoptions
          type: array
          items:
            $ref: '#/components/schemas/OptionRefOutSchema'
        alsoKnownAs:
          title: Alsoknownas
          type: array
          items:
            type: string
        application:
          title: Application
          type: string
        asin:
          title: Asin
          type: string
        colors:
          title: Colors
          type: array
          items:
            type: string
        condition:
          $ref: '#/components/schemas/Condition'
        consumerCategories:
          title: Consumercategories
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        contactSetting:
          $ref: '#/components/schemas/ContactSetting'
        customUrl:
          title: Customurl
          type: string
        description:
          title: Description
          type: string
        dimensions:
          $ref: '#/components/schemas/DimensionsSchema'
        ebayCategoryId:
          title: Ebaycategoryid
          type: integer
        fixedShippingType:
          $ref: '#/components/schemas/FixedShippingType'
        footnote:
          title: Footnote
          type: string
        group:
          title: Group
          type: string
        hasVisualization:
          title: Hasvisualization
          type: boolean
        illustrationCallout:
          title: Illustrationcallout
          type: string
        illustrationCode:
          title: Illustrationcode
          type: string
        imageMetadata:
          title: Imagemetadata
          type: object
          additionalProperties:
            anyOf:
              - type: boolean
              - type: array
                items:
                  type: string
        isDiscontinued:
          title: Isdiscontinued
          type: boolean
        isExcludedFromShoppingFeeds:
          title: Isexcludedfromshoppingfeeds
          type: boolean
        isFastMover:
          title: Isfastmover
          type: boolean
        isFeaturedProduct:
          title: Isfeaturedproduct
          type: boolean
        isFitmentHidden:
          title: Isfitmenthidden
          type: boolean
        isHazmat:
          title: Ishazmat
          type: boolean
        isHotDeal:
          title: Ishotdeal
          type: boolean
        isNonreturnable:
          title: Isnonreturnable
          type: boolean
        isNotForSale:
          title: Isnotforsale
          type: boolean
        isProductPageIndexed:
          title: Isproductpageindexed
          type: boolean
        isShipsInOwnBox:
          title: Isshipsinownbox
          type: boolean
        isUniversal:
          title: Isuniversal
          type: boolean
        isVinRequired:
          title: Isvinrequired
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        laborTime:
          title: Labortime
          type: number
        metaDescription:
          title: Metadescription
          type: string
        metaTitle:
          title: Metatitle
          type: string
        name:
          title: Name
          type: string
        outOfStockThreshold:
          title: Outofstockthreshold
          type: integer
        partTerminologyId:
          title: Partterminologyid
          type: integer
        position:
          title: Position
          type: string
        requiredMpns:
          title: Requiredmpns
          type: array
          items:
            type: string
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        rpCategories:
          title: Rpcategories
          type: array
          items:
            type: string
        subgroup:
          title: Subgroup
          type: string
        taxClass:
          $ref: '#/components/schemas/TaxClass'
        upc:
          title: Upc
          type: string
        urlGroup:
          title: Urlgroup
          type: string
        urlSubgroup:
          title: Urlsubgroup
          type: string
        vehicleClass:
          $ref: '#/components/schemas/VehicleClass'
        sku:
          title: Sku
          type: string
        mpn:
          title: Mpn
          type: string
        brand:
          $ref: '#/components/schemas/BrandRefSchema'
        catalogType:
          $ref: '#/components/schemas/CatalogType'
        catalogSubtype:
          $ref: '#/components/schemas/CatalogSubtype'
        catalog:
          title: Catalog
          type: string
        id:
          title: Id
          type: integer
        type:
          $ref: '#/components/schemas/ProductType'
        skuStripped:
          title: Skustripped
          type: string
        mpnStripped:
          title: Mpnstripped
          type: string
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
        references:
          title: References
          type: array
          items:
            $ref: '#/components/schemas/ProductRefSchema'
        defaultVariant:
          $ref: '#/components/schemas/ProductRefSchema'
        variants:
          title: Variants
          type: array
          items:
            $ref: '#/components/schemas/ProductRefSchema'
      additionalProperties: false
    ProductOutSchema:
      title: ProductOutSchema
      required:
        - sku
        - mpn
        - brand
        - catalogType
        - catalogSubtype
        - id
        - type
        - skuStripped
        - mpnStripped
        - createdTs
        - updatedTs
        - references
      type: object
      properties:
        alsoKnownAs:
          title: Alsoknownas
          type: array
          items:
            type: string
        application:
          title: Application
          type: string
        asin:
          title: Asin
          type: string
        colors:
          title: Colors
          type: array
          items:
            type: string
        condition:
          $ref: '#/components/schemas/Condition'
        consumerCategories:
          title: Consumercategories
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        contactSetting:
          $ref: '#/components/schemas/ContactSetting'
        customUrl:
          title: Customurl
          type: string
        description:
          title: Description
          type: string
        dimensions:
          $ref: '#/components/schemas/DimensionsSchema'
        ebayCategoryId:
          title: Ebaycategoryid
          type: integer
        fixedShippingType:
          $ref: '#/components/schemas/FixedShippingType'
        footnote:
          title: Footnote
          type: string
        group:
          title: Group
          type: string
        hasVisualization:
          title: Hasvisualization
          type: boolean
        illustrationCallout:
          title: Illustrationcallout
          type: string
        illustrationCode:
          title: Illustrationcode
          type: string
        imageMetadata:
          title: Imagemetadata
          type: object
          additionalProperties:
            anyOf:
              - type: boolean
              - type: array
                items:
                  type: string
        isDiscontinued:
          title: Isdiscontinued
          type: boolean
        isExcludedFromShoppingFeeds:
          title: Isexcludedfromshoppingfeeds
          type: boolean
        isFastMover:
          title: Isfastmover
          type: boolean
        isFeaturedProduct:
          title: Isfeaturedproduct
          type: boolean
        isFitmentHidden:
          title: Isfitmenthidden
          type: boolean
        isHazmat:
          title: Ishazmat
          type: boolean
        isHotDeal:
          title: Ishotdeal
          type: boolean
        isNonreturnable:
          title: Isnonreturnable
          type: boolean
        isNotForSale:
          title: Isnotforsale
          type: boolean
        isProductPageIndexed:
          title: Isproductpageindexed
          type: boolean
        isShipsInOwnBox:
          title: Isshipsinownbox
          type: boolean
        isUniversal:
          title: Isuniversal
          type: boolean
        isVinRequired:
          title: Isvinrequired
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        laborTime:
          title: Labortime
          type: number
        metaDescription:
          title: Metadescription
          type: string
        metaTitle:
          title: Metatitle
          type: string
        name:
          title: Name
          type: string
        outOfStockThreshold:
          title: Outofstockthreshold
          type: integer
        partTerminologyId:
          title: Partterminologyid
          type: integer
        position:
          title: Position
          type: string
        requiredMpns:
          title: Requiredmpns
          type: array
          items:
            type: string
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        rpCategories:
          title: Rpcategories
          type: array
          items:
            type: string
        subgroup:
          title: Subgroup
          type: string
        taxClass:
          $ref: '#/components/schemas/TaxClass'
        upc:
          title: Upc
          type: string
        urlGroup:
          title: Urlgroup
          type: string
        urlSubgroup:
          title: Urlsubgroup
          type: string
        vehicleClass:
          $ref: '#/components/schemas/VehicleClass'
        sku:
          title: Sku
          type: string
        mpn:
          title: Mpn
          type: string
        brand:
          $ref: '#/components/schemas/BrandRefSchema'
        catalogType:
          $ref: '#/components/schemas/CatalogType'
        catalogSubtype:
          $ref: '#/components/schemas/CatalogSubtype'
        catalog:
          title: Catalog
          type: string
        id:
          title: Id
          type: integer
        type:
          $ref: '#/components/schemas/ProductType'
        skuStripped:
          title: Skustripped
          type: string
        mpnStripped:
          title: Mpnstripped
          type: string
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
        references:
          title: References
          type: array
          items:
            $ref: '#/components/schemas/ProductRefSchema'
      additionalProperties: false
    ProductRefSchema:
      title: ProductRefSchema
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: integer
        type:
          $ref: '#/components/schemas/ReferenceType'
      additionalProperties: false
    ProductSearchInSchema:
      title: ProductSearchInSchema
      type: object
      properties:
        allowKit:
          title: Allowkit
          type: boolean
          description: Allow kits to be returned in the search results.
          default: true
        allowVariant:
          title: Allowvariant
          type: boolean
          description: Allow variants to be returned in the search results.
          default: true
        brands:
          title: Brands
          type: array
          items:
            type: string
          description: Brand filter.
          default: []
        catalogSubtypes:
          type: array
          items:
            $ref: '#/components/schemas/CatalogSubtype'
          description: Catalog subtype filter.
          default: []
        catalogTypeTrees:
          title: Catalogtypetrees
          type: array
          items:
            type: string
          description: Catalog type tree filter.
          default: []
        catalogTypes:
          type: array
          items:
            $ref: '#/components/schemas/CatalogType'
          description: Catalog type filter.
          default: []
        colors:
          title: Colors
          type: array
          items:
            type: string
          description: Color filter.
          default: []
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
          description: Product conditions filter.
          default: []
        consumerCategoryCategories:
          title: Consumercategorycategories
          type: array
          items:
            type: string
          description: ConsumerCategory category filter.
          default: []
        consumerCategorySubcategories:
          title: Consumercategorysubcategories
          type: array
          items:
            type: string
          description: ConsumerCategory subcategory filter.
          default: []
        consumerCategoryTrees:
          title: Consumercategorytrees
          type: array
          items:
            type: string
          description: ConsumerCategory tree filter.
          default: []
        country:
          title: Country
          type: string
          description: Customer country. Default to 'US' when there is no customer.
          default: US
        customerCategoryIds:
          title: Customercategoryids
          type: array
          items:
            type: string
          description: CustomerCategory id filter.
          default: []
        customerId:
          title: Customerid
          type: integer
          description: Customer id. Default to 0 when there is no customer.
          default: 0
        isDiscontinued:
          title: Isdiscontinued
          type: boolean
          description: Discontinued products filter. Empty = no filter.
        isDseoSearch:
          title: Isdseosearch
          type: boolean
          description: Perform DSEO search. This limits the results and back-off logic.
          default: false
        isFacetedSearchEnabled:
          title: Isfacetedsearchenabled
          type: boolean
          description: Returns facets with the search results.
          default: false
        isHazmat:
          title: Ishazmat
          type: boolean
          description: Hazmat product filter. Empty = no filter.
        isLeadGen:
          title: Isleadgen
          type: boolean
          description: Is this search in the context of a lead gen store.
          default: false
        isMpnOnly:
          title: Ismpnonly
          type: boolean
          description: Treat the search string as an MPN only.
          default: false
        isOversized:
          title: Isoversized
          type: boolean
          description: Oversized product filter. Empty = no filter.
        isStorePart:
          title: Isstorepart
          type: boolean
          description: Customer product filter. Empty = no filter.
        isSuperseded:
          title: Issuperseded
          type: boolean
          description: Superseded products filter. Empty = no filter.
        licensedUrlMakes:
          title: Licensedurlmakes
          type: array
          items:
            $ref: '#/components/schemas/ProductSearchLicensedUrlMakesSchema'
          description: Licensed URL makes filter.
          default: []
        mpnsStripped:
          title: Product MPN filter.
          type: array
          items:
            type: string
          default: []
        msrpRanges:
          title: Msrpranges
          type: array
          items:
            $ref: '#/components/schemas/ProductSearchMsrpRangeSchema'
          description: Product MSRP range filter.
          default: []
        partTerminologyIds:
          title: Partterminologyids
          type: array
          items:
            type: string
          description: Product Part Terminology IDs filter.
          default: []
        positions:
          title: Positions
          type: array
          items:
            type: string
          description: Product position filter
          default: []
        productTypes:
          type: array
          items:
            $ref: '#/components/schemas/EsProductType'
          description: Product type filter.
          default: []
        requestSource:
          title: Requestsource
          type: string
          description: Originating source for the search.
          default: ''
        resultFrom:
          title: Resultfrom
          type: integer
          description: Result offset.
          default: 0
        resultSize:
          title: Resultsize
          type: integer
          description: Result limit.
          default: 0
        rpCategories:
          title: Rpcategories
          type: array
          items:
            type: string
          description: RP category filter
          default: []
        scrollDuration:
          title: Scrollduration
          type: string
          description: Duration to keep the scroll request alive.
        scrollId:
          title: Scrollid
          type: string
          description: Scroll id from the previous search. Used to get the next result set.
        searchString:
          title: Searchstring
          type: string
          description: What do you want to search for?
          default: ''
        skusStripped:
          title: Skusstripped
          type: array
          items:
            type: string
          description: Product SKU filter.
          default: []
        urlDbGroups:
          title: Urldbgroups
          type: array
          items:
            type: string
          description: Classification url db group filter.
          default: []
        urlDbSubgroups:
          title: Urldbsubgroups
          type: array
          items:
            type: string
          description: Classification url db subgroup filter.
          default: []
        urlEngines:
          title: Urlengines
          type: array
          items:
            type: string
          description: Classification url engine filter.
          default: []
        urlMakes:
          title: Urlmakes
          type: array
          items:
            type: string
          description: Classification url make filter.
          default: []
        urlModels:
          title: Urlmodels
          type: array
          items:
            type: string
          description: Classification url model filter.
          default: []
        urlPartSources:
          title: Urlpartsources
          type: array
          items:
            type: string
          description: Product url part source filter.
          default: []
        urlTrims:
          title: Urltrims
          type: array
          items:
            type: string
          description: Classification url trim filter.
          default: []
        urlYears:
          title: Urlyears
          type: array
          items:
            type: integer
          description: Classification year filter
          default: []
        vehicle:
          title: Vehicle
          allOf:
            - $ref: '#/components/schemas/ProductSearchVehicleSchema'
          description: Vehicle information filter.
          default: {}
        vehicleClasses:
          type: array
          items:
            $ref: '#/components/schemas/VehicleClass'
          description: Product vehicle class filter.
          default: []
        wdTypes:
          type: array
          items:
            $ref: '#/components/schemas/WdType'
          description: Product W&D type filter.
          default: []
      additionalProperties: false
    ProductSearchLicensedUrlMakesSchema:
      title: ProductSearchLicensedUrlMakesSchema
      required:
        - urlMake
        - catalogSelection
      type: object
      properties:
        urlMake:
          title: Urlmake
          type: string
        catalogSelection:
          title: Catalogselection
          type: string
      additionalProperties: false
    ProductSearchMsrpRangeSchema:
      title: ProductSearchMsrpRangeSchema
      required:
        - min
        - max
      type: object
      properties:
        min:
          title: Min
          type: number
        max:
          title: Max
          type: number
      additionalProperties: false
    ProductSearchOutSchema:
      title: ProductSearchOutSchema
      required:
        - documents
        - facets
        - hits
        - parsedVehicle
        - searchTime
        - warnDoesNotFit
      type: object
      properties:
        documents:
          title: Documents
          type: array
          items:
            type: object
        facets:
          title: Facets
          type: object
        hits:
          title: Hits
          type: integer
        parsedVehicle:
          $ref: '#/components/schemas/ProductSearchVehicleSchema'
        scrollId:
          title: Scrollid
          type: string
        searchTime:
          title: Searchtime
          type: integer
        warnDoesNotFit:
          title: Warndoesnotfit
          type: boolean
      additionalProperties: false
    ProductSearchVehicleSchema:
      title: ProductSearchVehicleSchema
      type: object
      properties:
        carId:
          title: Carid
          type: string
        urlYear:
          title: Urlyear
          type: integer
        urlMake:
          title: Urlmake
          type: string
        urlModel:
          title: Urlmodel
          type: string
        urlTrim:
          title: Urltrim
          type: string
        urlEngine:
          title: Urlengine
          type: string
      additionalProperties: false
    ProductType:
      title: ProductType
      enum:
        - PRODUCT
        - PRODUCT_BUNDLE
        - PRODUCT_MASTER_VARIANT
        - PRODUCT_VARIANT
      description: An enumeration.
    ProductVariantInSchema:
      title: ProductVariantInSchema
      required:
        - sku
        - mpn
        - brand
        - catalogType
        - catalogSubtype
        - isStandaloneProduct
        - isDefaultVariant
      type: object
      properties:
        variantOptions:
          title: Variantoptions
          type: array
          items:
            $ref: '#/components/schemas/OptionRefInSchema'
        alsoKnownAs:
          title: Alsoknownas
          type: array
          items:
            type: string
        application:
          title: Application
          type: string
        asin:
          title: Asin
          type: string
        colors:
          title: Colors
          type: array
          items:
            type: string
        condition:
          $ref: '#/components/schemas/Condition'
        consumerCategories:
          title: Consumercategories
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        contactSetting:
          $ref: '#/components/schemas/ContactSetting'
        customUrl:
          title: Customurl
          type: string
        description:
          title: Description
          type: string
        dimensions:
          $ref: '#/components/schemas/DimensionsSchema'
        ebayCategoryId:
          title: Ebaycategoryid
          type: integer
        fixedShippingType:
          $ref: '#/components/schemas/FixedShippingType'
        footnote:
          title: Footnote
          type: string
        group:
          title: Group
          type: string
        hasVisualization:
          title: Hasvisualization
          type: boolean
        illustrationCallout:
          title: Illustrationcallout
          type: string
        illustrationCode:
          title: Illustrationcode
          type: string
        imageMetadata:
          title: Imagemetadata
          type: object
          additionalProperties:
            anyOf:
              - type: boolean
              - type: array
                items:
                  type: string
        isDiscontinued:
          title: Isdiscontinued
          type: boolean
        isExcludedFromShoppingFeeds:
          title: Isexcludedfromshoppingfeeds
          type: boolean
        isFastMover:
          title: Isfastmover
          type: boolean
        isFeaturedProduct:
          title: Isfeaturedproduct
          type: boolean
        isFitmentHidden:
          title: Isfitmenthidden
          type: boolean
        isHazmat:
          title: Ishazmat
          type: boolean
        isHotDeal:
          title: Ishotdeal
          type: boolean
        isNonreturnable:
          title: Isnonreturnable
          type: boolean
        isNotForSale:
          title: Isnotforsale
          type: boolean
        isProductPageIndexed:
          title: Isproductpageindexed
          type: boolean
        isShipsInOwnBox:
          title: Isshipsinownbox
          type: boolean
        isUniversal:
          title: Isuniversal
          type: boolean
        isVinRequired:
          title: Isvinrequired
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        laborTime:
          title: Labortime
          type: number
        metaDescription:
          title: Metadescription
          type: string
        metaTitle:
          title: Metatitle
          type: string
        name:
          title: Name
          type: string
        outOfStockThreshold:
          title: Outofstockthreshold
          type: integer
        partTerminologyId:
          title: Partterminologyid
          type: integer
        position:
          title: Position
          type: string
        requiredMpns:
          title: Requiredmpns
          type: array
          items:
            type: string
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        rpCategories:
          title: Rpcategories
          type: array
          items:
            type: string
        subgroup:
          title: Subgroup
          type: string
        taxClass:
          $ref: '#/components/schemas/TaxClass'
        upc:
          title: Upc
          type: string
        urlGroup:
          title: Urlgroup
          type: string
        urlSubgroup:
          title: Urlsubgroup
          type: string
        vehicleClass:
          $ref: '#/components/schemas/VehicleClass'
        sku:
          title: Sku
          type: string
        mpn:
          title: Mpn
          type: string
        brand:
          $ref: '#/components/schemas/BrandRefSchema'
        catalogType:
          $ref: '#/components/schemas/CatalogType'
        catalogSubtype:
          $ref: '#/components/schemas/CatalogSubtype'
        catalog:
          title: Catalog
          type: string
        id:
          title: Id
          type: integer
          description: >-
            Product id used in place of the path parameter for bulk-updating
            products.
        masterVariant:
          $ref: '#/components/schemas/ProductRefSchema'
        isStandaloneProduct:
          title: Isstandaloneproduct
          type: boolean
        isDefaultVariant:
          title: Isdefaultvariant
          type: boolean
      additionalProperties: false
    ProductVariantOutSchema:
      title: ProductVariantOutSchema
      required:
        - sku
        - mpn
        - brand
        - catalogType
        - catalogSubtype
        - id
        - type
        - skuStripped
        - mpnStripped
        - createdTs
        - updatedTs
        - references
        - masterVariant
        - isStandaloneProduct
        - isDefaultVariant
      type: object
      properties:
        variantOptions:
          title: Variantoptions
          type: array
          items:
            $ref: '#/components/schemas/OptionRefOutSchema'
        alsoKnownAs:
          title: Alsoknownas
          type: array
          items:
            type: string
        application:
          title: Application
          type: string
        asin:
          title: Asin
          type: string
        colors:
          title: Colors
          type: array
          items:
            type: string
        condition:
          $ref: '#/components/schemas/Condition'
        consumerCategories:
          title: Consumercategories
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        contactSetting:
          $ref: '#/components/schemas/ContactSetting'
        customUrl:
          title: Customurl
          type: string
        description:
          title: Description
          type: string
        dimensions:
          $ref: '#/components/schemas/DimensionsSchema'
        ebayCategoryId:
          title: Ebaycategoryid
          type: integer
        fixedShippingType:
          $ref: '#/components/schemas/FixedShippingType'
        footnote:
          title: Footnote
          type: string
        group:
          title: Group
          type: string
        hasVisualization:
          title: Hasvisualization
          type: boolean
        illustrationCallout:
          title: Illustrationcallout
          type: string
        illustrationCode:
          title: Illustrationcode
          type: string
        imageMetadata:
          title: Imagemetadata
          type: object
          additionalProperties:
            anyOf:
              - type: boolean
              - type: array
                items:
                  type: string
        isDiscontinued:
          title: Isdiscontinued
          type: boolean
        isExcludedFromShoppingFeeds:
          title: Isexcludedfromshoppingfeeds
          type: boolean
        isFastMover:
          title: Isfastmover
          type: boolean
        isFeaturedProduct:
          title: Isfeaturedproduct
          type: boolean
        isFitmentHidden:
          title: Isfitmenthidden
          type: boolean
        isHazmat:
          title: Ishazmat
          type: boolean
        isHotDeal:
          title: Ishotdeal
          type: boolean
        isNonreturnable:
          title: Isnonreturnable
          type: boolean
        isNotForSale:
          title: Isnotforsale
          type: boolean
        isProductPageIndexed:
          title: Isproductpageindexed
          type: boolean
        isShipsInOwnBox:
          title: Isshipsinownbox
          type: boolean
        isUniversal:
          title: Isuniversal
          type: boolean
        isVinRequired:
          title: Isvinrequired
          type: boolean
        isVisible:
          title: Isvisible
          type: boolean
        laborTime:
          title: Labortime
          type: number
        metaDescription:
          title: Metadescription
          type: string
        metaTitle:
          title: Metatitle
          type: string
        name:
          title: Name
          type: string
        outOfStockThreshold:
          title: Outofstockthreshold
          type: integer
        partTerminologyId:
          title: Partterminologyid
          type: integer
        position:
          title: Position
          type: string
        requiredMpns:
          title: Requiredmpns
          type: array
          items:
            type: string
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        rpCategories:
          title: Rpcategories
          type: array
          items:
            type: string
        subgroup:
          title: Subgroup
          type: string
        taxClass:
          $ref: '#/components/schemas/TaxClass'
        upc:
          title: Upc
          type: string
        urlGroup:
          title: Urlgroup
          type: string
        urlSubgroup:
          title: Urlsubgroup
          type: string
        vehicleClass:
          $ref: '#/components/schemas/VehicleClass'
        sku:
          title: Sku
          type: string
        mpn:
          title: Mpn
          type: string
        brand:
          $ref: '#/components/schemas/BrandRefSchema'
        catalogType:
          $ref: '#/components/schemas/CatalogType'
        catalogSubtype:
          $ref: '#/components/schemas/CatalogSubtype'
        catalog:
          title: Catalog
          type: string
        id:
          title: Id
          type: integer
        type:
          $ref: '#/components/schemas/ProductType'
        skuStripped:
          title: Skustripped
          type: string
        mpnStripped:
          title: Mpnstripped
          type: string
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
        references:
          title: References
          type: array
          items:
            $ref: '#/components/schemas/ProductRefSchema'
        masterVariant:
          $ref: '#/components/schemas/MasterVariantRefSchema'
        isStandaloneProduct:
          title: Isstandaloneproduct
          type: boolean
        isDefaultVariant:
          title: Isdefaultvariant
          type: boolean
      additionalProperties: false
    ReferenceType:
      title: ReferenceType
      enum:
        - OVERRIDE
        - VARIANT
        - BUNDLE_PARENT
        - PRODUCT
      description: An enumeration.
    RestrictionType:
      title: RestrictionType
      enum:
        - null
        - Theft
      description: An enumeration.
    StringValueInSchema:
      title: StringValueInSchema
      required:
        - locale
        - isActive
        - value
        - modifier
      type: object
      properties:
        locale:
          title: Locale
          type: string
        isActive:
          title: Isactive
          type: boolean
        value:
          title: Value
          type: string
        modifier:
          title: Modifier
          type: string
      additionalProperties: false
    StringValueOutSchema:
      title: StringValueOutSchema
      required:
        - id
        - createdTs
        - updatedTs
        - locale
        - isActive
        - value
        - modifier
      type: object
      properties:
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
        locale:
          title: Locale
          type: string
        isActive:
          title: Isactive
          type: boolean
        value:
          title: Value
          type: string
        modifier:
          title: Modifier
          type: string
      additionalProperties: false
    SupportedCurrency:
      title: SupportedCurrency
      enum:
        - USD
      type: string
      description: An enumeration.
    TaxClass:
      title: TaxClass
      enum:
        - Default
        - None
      description: An enumeration.
    UiUrlOutSchema:
      title: UiUrlOutSchema
      required:
        - ui
        - url
      type: object
      properties:
        ui:
          title: Ui
          type: string
        url:
          title: Url
          type: string
      additionalProperties: false
    UiUrlYearRangeOutSchema:
      title: UiUrlYearRangeOutSchema
      required:
        - ui
        - url
        - start_year
        - end_year
      type: object
      properties:
        ui:
          title: Ui
          type: string
        url:
          title: Url
          type: string
        start_year:
          title: Start Year
          type: string
        end_year:
          title: End Year
          type: string
      additionalProperties: false
    UpdatePricesInSchema:
      title: UpdatePricesInSchema
      type: object
      properties:
        items:
          title: Items
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/PriceInSchema'
          description: Array of prices.
          default: []
      additionalProperties: false
    UpdateProductsInSchema:
      title: UpdateProductsInSchema
      type: object
      properties:
        items:
          title: Items
          maxItems: 100
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/ProductInSchema'
              - $ref: '#/components/schemas/ProductBundleInSchema'
              - $ref: '#/components/schemas/ProductMasterVariantInSchema'
              - $ref: '#/components/schemas/ProductVariantInSchema'
          description: Array of products.
          default: []
      additionalProperties: false
    ValidationError:
      title: ErrorModel
      type: object
      properties:
        code:
          title: Code
          type: string
        message:
          title: Message
          type: string
        location:
          title: Location
          type: string
        innerError:
          $ref: '#/components/schemas/InnerValidationError'
      required:
        - code
        - message
      additionalProperties: false
    VehicleClass:
      title: VehicleClass
      enum:
        - ALL
        - CAR
        - ''
        - VAN
      description: An enumeration.
    VehicleCountry:
      title: VehicleCountry
      enum:
        - CA
        - MX
        - US
      description: Country ISO 3166 codes for countries we have vehicle data for
    VehicleListOutSchema:
      title: VehicleListOutSchema
      required:
        - name
        - id
        - createdTs
        - updatedTs
      type: object
      properties:
        name:
          title: Name
          type: string
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
      additionalProperties: false
    VehicleListRefSchema:
      title: VehicleListRefSchema
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: integer
      additionalProperties: false
    VehicleListType:
      title: VehicleListType
      enum:
        - LIGHT_DUTY
      description: An enumeration.
    VehicleOutSchema:
      title: VehicleOutSchema
      required:
        - vehicleList
        - year
        - make
        - model
        - trim
        - engine
        - id
        - createdTs
        - updatedTs
        - mmyteHash
      type: object
      properties:
        vehicleList:
          $ref: '#/components/schemas/VehicleListRefSchema'
        year:
          $ref: '#/components/schemas/UiUrlOutSchema'
        make:
          $ref: '#/components/schemas/UiUrlOutSchema'
        model:
          $ref: '#/components/schemas/UiUrlOutSchema'
        trim:
          $ref: '#/components/schemas/UiUrlOutSchema'
        engine:
          $ref: '#/components/schemas/UiUrlOutSchema'
        id:
          title: Id
          type: integer
        createdTs:
          title: Createdts
          type: string
          format: date-time
        updatedTs:
          title: Updatedts
          type: string
          format: date-time
        mmyteHash:
          title: Mmytehash
          type: string
        baseVehicleId:
          title: Basevehicleid
          type: string
      additionalProperties: false
    VehicleRefSchema:
      title: VehicleRefSchema
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: integer
      additionalProperties: false
    WdType:
      title: WdType
      enum:
        - ACTUAL
        - ESTIMATED
        - MISSING
      description: An enumeration.
    WeightUnit:
      title: WeightUnit
      enum:
        - KG
        - LB
      description: An enumeration.
    InnerValidationError:
      title: InnerErrorModel
      type: object
      properties:
        code:
          title: Code
          type: string
        message:
          title: Message
          type: string
      required:
        - code
      additionalProperties: false
  securitySchemes:
    HTTPBasic:
      type: http
      scheme: basic
